---
elasticsearchHosts: "https://elasticsearch-master:9200"
elasticsearchCertificateSecret: elasticsearch-master-certs
elasticsearchCertificateAuthoritiesFile: ca.crt
elasticsearchCredentialSecret: elasticsearch-master-credentials


replicas: {{ _elasticsearch.kibana.replica|int }}


extraEnvs:
  - name: "NODE_OPTIONS"
    value: "--max-old-space-size=1800"


envFrom: []
secretMounts: []
hostAliases: []


image: "docker.elastic.co/kibana/kibana"
imageTag: "8.5.1"
imagePullPolicy: "IfNotPresent"


labels: {}
annotations: {}
podAnnotations: {}


resources:
  requests:
    cpu: "1000m"
    memory: "2Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"


protocol: http
serverHost: "0.0.0.0"
healthCheckPath: "/app/kibana"
kibanaConfig: {}


podSecurityContext:
  fsGroup: 1000


securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 1000


serviceAccount: ""
automountToken: true
priorityClassName: ""
httpPort: 5601


extraVolumes: []
extraVolumeMounts: []
extraContainers: []
extraInitContainers: []


updateStrategy:
  type: "Recreate"


service:
  type: ClusterIP
  loadBalancerIP: ""
  port: 5601
  nodePort: ""
  labels: {}
  annotations: {}
  loadBalancerSourceRanges: []
  httpPortName: http


ingress:
  enabled: false
  className: "nginx"
  pathtype: ImplementationSpecific
  annotations: {}
  hosts:
    - host: elastic.jtest.pivotal.io
      paths:
        - path: /
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5


imagePullSecrets: []
nodeSelector: {}
tolerations: []
affinity: {}


nameOverride: ""
fullnameOverride: ""


lifecycle: {}

