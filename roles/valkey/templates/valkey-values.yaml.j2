useHostnames: true
nameResolutionThreshold: 5
nameResolutionTimeout: 5
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity


architecture: replication


auth:
  enabled: true
  sentinel: true
  password: "changeme"
  existingSecret: ""
  existingSecretPasswordKey: ""
  usePasswordFiles: false
  usePasswordFileFromSecret: true


commonConfiguration: |-
  appendonly yes
  save ""


existingConfigmap: ""


primary:
  replicaCount: 1
  configuration: ""
  disableCommands:
    - FLUSHDB
    - FLUSHALL
  enableServiceLinks: true
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  containerPorts:
    valkey: 6379
  resourcesPreset: "nano"
  kind: StatefulSet
  schedulerName: ""
  updateStrategy:
    type: RollingUpdate
  minReadySeconds: 0
  priorityClassName: ""
  automountServiceAccountToken: false
  shareProcessNamespace: false
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  dnsPolicy: ""
  persistence:
    enabled: true
    medium: ""
    sizeLimit: ""
    path: /data
    subPath: ""
    subPathExpr: ""
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    existingClaim: ""
  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain
  service:
    type: ClusterIP
    ports:
      valkey: 6379
    nodePorts:
      valkey: ""
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerClass: ""
    sessionAffinity: None
  terminationGracePeriodSeconds: 30
  serviceAccount:
    create: true
    name: ""
    automountServiceAccountToken: false
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""


replica:
  kind: StatefulSet
  replicaCount: 3
  configuration: ""
  disableCommands:
    - FLUSHDB
    - FLUSHALL
  enableServiceLinks: true
  externalPrimary:
    enabled: false
    host: ""
    port: 6379
  containerPorts:
    valkey: 6379
  resourcesPreset: "nano"
  minReadySeconds: 0
  priorityClassName: ""
  podManagementPolicy: ""
  automountServiceAccountToken: false
  shareProcessNamespace: false
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
  persistence:
    enabled: true
    medium: ""
    sizeLimit: ""
    path: /data
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    existingClaim: ""
  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain
  service:
    type: ClusterIP
    ports:
      valkey: 6379
    nodePorts:
      valkey: ""
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerClass: ""
    sessionAffinity: None
  terminationGracePeriodSeconds: 30
  autoscaling:
    vpa:
      enabled: false
      updatePolicy:
        updateMode: Auto
    hpa:
      enabled: false
      minReplicas: ""
      maxReplicas: ""
      targetCPU: ""
      targetMemory: ""
  serviceAccount:
    create: true
    name: ""
    automountServiceAccountToken: false
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""


sentinel:
  enabled: false
  primarySet: myprimary
  quorum: 2
  getPrimaryTimeout: 90
  automateClusterRecovery: false
  valkeyShutdownWaitFailover: true
  downAfterMilliseconds: 60000
  failoverTimeout: 180000
  parallelSyncs: 1
  enableServiceLinks: true
  externalPrimary:
    enabled: false
    host: ""
    port: 6379
  containerPorts:
    sentinel: 26379
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 100Mi
  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain
  resourcesPreset: "nano"
  service:
    type: ClusterIP
    ports:
      valkey: 6379
      sentinel: 26379
    nodePorts:
      valkey: ""
      sentinel: ""
    externalTrafficPolicy: Cluster
    clusterIP: ""
    createPrimary: false
    loadBalancerIP: ""
  terminationGracePeriodSeconds: 30


serviceBindings:
  enabled: false


networkPolicy:
  enabled: true
  allowExternal: true
  allowExternalEgress: true
  metrics:
    allowExternal: true


podSecurityPolicy:
  create: false
  enabled: false


rbac:
  create: false


serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: false


tls:
  enabled: false
  authClients: true
  autoGenerated: false
  existingSecret: ""
  certFilename: ""
  certKeyFilename: ""
  certCAFilename: ""
  dhParamsFilename: ""


metrics:
  enabled: false
  containerPorts:
    http: 9121
  valkeyTargetHost: "localhost"
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop: ["ALL"]
  resourcesPreset: "nano"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
  service:
    enabled: true
    type: ClusterIP
    ports:
      http: 9121
    externalTrafficPolicy: Cluster
  serviceMonitor:
    port: http-metrics
    enabled: false
    namespace: ""
    interval: 30s
    scrapeTimeout: ""
    honorLabels: false
    sampleLimit: false
    targetLimit: false
  podMonitor:
    port: metrics
    enabled: false
  prometheusRule:
    enabled: false


volumePermissions:
  enabled: false
  resourcesPreset: "nano"
  containerSecurityContext:
    runAsUser: 0


kubectl:
  command: ["/opt/bitnami/scripts/kubectl-scripts/update-primary-label.sh"]
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop: ["ALL"]
  resources:


useExternalDNS:
  enabled: false
  suffix: ""
  annotationKey: external-dns.alpha.kubernetes.io/

