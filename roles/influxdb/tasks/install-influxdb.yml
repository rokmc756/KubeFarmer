- name: Create Namespace for Persistent Volumes
  shell: |
    kubectl create namespace {{ _influxdb.namespace }}
  register: create_namespace
  #with_items:
  #  - influxdb
- debug: msg={{ create_namespace }}
  when: print_debug == true


- name: Copy Cluster Local PVC Config Yaml
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_cluster_local_pvc_config_yaml
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
- debug: msg={{ copy_cluster_local_pvc_config_yaml }}


- name: Cluster Settings for a Production Cluster Running in a Dynamic Cloud Environment including VMware
  shell: |
    kubectl create -f {{ item }}
  register: create_pvc
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ create_pvc }}
  when: print_debug == true


- name: Copy InfluxDB Helm Config
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_influxdb_helm_config
  with_items:
    - "influxdb-values.yaml"
- debug: msg={{ copy_influxdb_helm_config }}


- name: Deploy InfluxDB
  shell: |
    /usr/local/bin/helm install influxdb bitnami/influxdb -n {{ _influxdb.namespace }} -f {{ base_path }}/influxdb-values.yaml
  register: deploy_influxdb
- debug: msg={{ deploy_influxdb }}
  when: print_debug == true


- name: Validate if InfluxDB Controller Containers are Running
  shell: |
    kubectl get pods -n {{ _influxdb.namespace }} | grep {{ item.svc }} | awk '{print $3}' | grep Running | wc -l
  register: check_influxdb_containers
  until: check_influxdb_containers.stdout|int == item.replica|int
  retries: 100
  delay: 10
  with_items:
    - { svc: "influxdb-", replica: "{{ _influxdb.replica }}" }
- debug: msg={{ check_influxdb_containers }}
  when: print_debug == true

