global:
  imageRegistry: ""
  imagePullSecrets: []
  defaultStorageClass: ""
  storageClass: ""
  security:
    allowInsecureImages: false
  compatibility:
    openshift:
      adaptSecurityContext: auto


kubeVersion: ""
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""
commonAnnotations: {}
commonLabels: {}
schedulerName: ""
clusterDomain: cluster.local
extraDeploy: []
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity


image:
  registry: docker.io
  repository: bitnami/mariadb-galera
  tag: 11.4.4-debian-12-r3
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: true


podManagementPolicy: OrderedReady
automountServiceAccountToken: false
hostAliases: []
service:
  # type: LoadBalancer
  type: ClusterIP
  clusterIP: ""
  ports:
    mysql: 3306
  nodePorts:
    mysql: ""
  extraPorts: []
  externalIPs: []
  loadBalancerIP: "192.168.1.236"
  loadBalancerSourceRanges: []
  externalTrafficPolicy: Cluster
  annotations: {}
  sessionAffinity: None
  sessionAffinityConfig: {}
  headless:
    annotations: {}
    publishNotReadyAddresses: true


networkPolicy:
  enabled: true
  allowExternal: true
  allowExternalEgress: true
  extraIngress: []
  extraEgress: []
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}


serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: false
  annotations: {}


command: []
args: []
extraEnvVars: []
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
rbac:
  create: false


podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001


containerSecurityContext:
  enabled: true
  seLinuxOptions: {}
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"


rootUser:
  user: root
  password: "{{ mariadb.root_password }}"
  forcePassword: false


existingSecret: ""
usePasswordFiles: false
customPasswordFiles: {}


db:
  user: "{{ mariadb.db.user }}"
  password: "{{ mariadb.db.password }}"
  name: "{{ mariadb.db.name }}"
  forcePassword: false


galera:
  name: galera
  bootstrap:
    forceBootstrap: false
    bootstrapFromNode: 0
    forceSafeToBootstrap: false
  mariabackup:
    user: mariabackup
    password: "{{ mariadb.mariabackup_password }}"
    forcePassword: false


ldap:
  enabled: false
  uri: ""
  base: ""
  binddn: ""
  bindpw: ""
  bslookup: ""
  filter: ""
  map: ""
  nss_initgroups_ignoreusers: root,nslcd
  scope: ""
  tls_reqcert: ""


tls:
  enabled: false
  autoGenerated: false
  certificatesSecret: ""
  certFilename: ""
  certKeyFilename: ""
  certCAFilename: ""


mariadbConfiguration: |-
  [client]
  port=3306
  socket=/opt/bitnami/mariadb/tmp/mysql.sock
  plugin_dir=/opt/bitnami/mariadb/plugin

  [mysqld]
  explicit_defaults_for_timestamp
  default_storage_engine=InnoDB
  basedir=/opt/bitnami/mariadb
  datadir=/bitnami/mariadb/data
  plugin_dir=/opt/bitnami/mariadb/plugin
  tmpdir=/opt/bitnami/mariadb/tmp
  socket=/opt/bitnami/mariadb/tmp/mysql.sock
  pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
  bind_address=0.0.0.0

  collation_server=utf8_unicode_ci
  init_connect='SET NAMES utf8'
  character_set_server=utf8

  key_buffer_size=32M
  myisam_recover_options=FORCE,BACKUP

  skip_host_cache
  skip_name_resolve
  max_allowed_packet=16M
  max_connect_errors=1000000
  sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY
  sysdate_is_now=1

  log_bin=mysql-bin
  expire_logs_days=14

  sync_binlog=0

  binlog_format=row

  tmp_table_size=32M
  max_heap_table_size=32M

  query_cache_type=1
  query_cache_limit=4M
  query_cache_size=256M
  max_connections=500
  thread_cache_size=50
  open_files_limit=65535
  table_definition_cache=4096
  table_open_cache=4096

  innodb=FORCE
  innodb_strict_mode=1

  innodb_autoinc_lock_mode=2

  innodb_doublewrite=1
  innodb_flush_method=O_DIRECT
  innodb_log_files_in_group=2
  innodb_log_file_size=128M
  innodb_flush_log_at_trx_commit=1
  innodb_file_per_table=1

  innodb_buffer_pool_size=2G
  innodb_file_format=Barracuda

  log_error=/opt/bitnami/mariadb/logs/mysqld.log
  slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
  log_queries_not_using_indexes=1
  slow_query_log=1

  [galera]
  wsrep_on=ON
  wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
  wsrep_sst_method=mariabackup
  wsrep_slave_threads=4
  wsrep_cluster_address=gcomm://
  wsrep_cluster_name=galera
  # wsrep_cluster_name=mariadb-galera
  wsrep_sst_auth="root:"
  innodb_flush_log_at_trx_commit=2
  wsrep_mode=REPLICATE_MYISAM

  [mariadb]
  plugin_load_add=auth_pam


configurationConfigMap: ""
initdbScripts: {}
initdbScriptsConfigMap: ""
extraFlags: ""
replicaCount: {{ mariadb.replica }}


updateStrategy:
  type: RollingUpdate


podLabels: {}
podAnnotations: {}
podAffinityPreset: ""
podAntiAffinityPreset: hard
# podAntiAffinityPreset: soft


nodeAffinityPreset:
  type: ""
  key: ""
  values: []


affinity: {}
nodeSelector: {}
tolerations: []
topologySpreadConstraints: []
lifecycleHooks: {}


containerPorts:
  mysql: 3306
  galera: 4567
  ist: 4568
  sst: 4444


persistence:
  enabled: true
  # existingClaim: "data-mariadb-galera-0"
  existingClaim: ""
  subPath: ""
  mountPath: /bitnami/mariadb
  selector: {}
  storageClass: ""
  annotations: {}
  labels: {}
  accessModes:
    - ReadWriteOnce
  size: 8Gi


priorityClassName: ""
initContainers: []
sidecars: []
extraVolumes: []
extraVolumeMounts: []
resourcesPreset: "micro"
resources: {}


livenessProbe:
  enabled: true
  initialDelaySeconds: 120
  periodSeconds: 60    # 10
  timeoutSeconds: 10   # 1
  successThreshold: 1
  failureThreshold: 3


readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds:  60   # 10
  timeoutSeconds: 10   # 1
  successThreshold: 1
  failureThreshold: 3


startupProbe:
  enabled: false
  initialDelaySeconds: 120
  periodSeconds: 60    # 10
  timeoutSeconds: 10   # 1
  successThreshold: 1
  failureThreshold: 48


customStartupProbe: {}
customLivenessProbe: {}
customReadinessProbe: {}
podDisruptionBudget: {}


pdb:
  create: true
  minAvailable: ""
  maxUnavailable: ""


metrics:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/mysqld-exporter
    tag: 0.16.0-debian-12-r2
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  extraFlags: []
  resourcesPreset: "nano"
  resources: {}
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  containerPorts:
    http: 9104
  service:
    type: ClusterIP
    # type: LoadBalancer
    port: 9104
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9104"
    loadBalancerIP: "192.168.1.237"
    clusterIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: Cluster
  serviceMonitor:
    enabled: false
    namespace: ""
    jobLabel: ""
    interval: ""
    scrapeTimeout: ""
    selector: {}
    relabelings: []
    metricRelabelings: []
    honorLabels: false
    labels: {}
  prometheusRules:
    enabled: false
    additionalLabels:
      app: prometheus-operator
      release: prometheus
    rules: {}

# https://artifacthub.io/packages/helm/bitnami/mariadb-galera
# https://www.dbi-services.com/blog/setting-up-mariadb-galera-cluster/
# https://qiita.com/rururu_kenken/items/9dfede810460d6c12d56

