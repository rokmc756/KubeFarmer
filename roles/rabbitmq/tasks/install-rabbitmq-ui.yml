# https://medium.com/@tharukam/simplifying-rabbitmq-ui-your-guide-to-google-oauth-integration-on-kubernetes-0a62edf8fc2d
# https://pastime2532.tistory.com/257

- name: Check if rabbitmq UI Directory exists
  stat: path={{ base_path }}/rabbitmq-ui
  register: rabbitmq_ui_dir
- debug: msg={{ rabbitmq_ui_dir }}
  when: print_debug == true


- name: Pull rabbitmq UI Tarball
  shell: |
    /usr/local/bin/helm pull rabbitmq-ui/rabbitmq-ui
  register: pull_rabbitmq_ui_tarball
  args:
    chdir: "{{ base_path }}/"
  when: rabbitmq_ui_dir.stat.exists == false
- debug: msg={{ pull_rabbitmq_ui_tarball }}
  when: print_debug == true and rabbitmq_ui_dir.stat.exists == false


- name: Unarchive rabbitmq UI Tarball
  unarchive:
    src: "{{ base_path }}/rabbitmq-ui-{{ rabbitmq_ui.major_version }}.{{ rabbitmq_ui.minor_version }}.{{ rabbitmq_ui.patch_version }}.tgz"
    dest: "{{ base_path }}/"
    mode: 0755
    owner: root
    group: root
    remote_src: true
  register: unarchive_rabbitmq_ui_tarball
  when: rabbitmq_ui_dir.stat.exists == false
- debug: msg={{ unarchive_rabbitmq_ui_tarball }}
  when: print_debug == true and rabbitmq_ui_dir.stat.exists == false


- name: Create Namespace for rabbitmq UI
  shell: |
    kubectl create namespace {{ item }}
  register: create_rabbitmq_ui_namespace
  with_items:
    - "{{ rabbitmq_ui.namespace }}"
- debug: msg={{ create_rabbitmq_ui_namespace }}
  when: print_debug == true


#- name: Replace lines for NFS Server IP Address and NFS Root
#  lineinfile:
#    dest: "{{ base_path }}/nfs-subdir-external-provisioner/deploy/deployment.yaml"
#    regexp: "{{ item.regexp }}"
#    line: "{{ item.line }}"
#    state: "{{ item.state }}"
#  register: replace_nfs_server_lines
#  with_items:
#    - { regexp: '^              value: 10.3.243.101', line: '              value: 192.168.1.90', state: present }
#    - { regexp: '^              value: /ifs/kubernetes', line: '              value: /nfs-root', state: present }
#    - { regexp: '^            server: 10.3.243.101', line: '            server: 192.168.1.90', state: present }
#    - { regexp: '^            path: /ifs/kubernetes', line: '            path: /nfs-root', state: present }
#- debug: msg={{ replace_nfs_server_lines  }}
#  when: print_debug == true


- name: Copy rabbitmq UI Config Yaml
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/rabbitmq-ui/{{ item }}"
  register: copy_rabbitmq_ui_config_yaml
  with_items:
    - "rabbitmq-ui-values.yaml"
- debug: msg={{ copy_rabbitmq_ui_config_yaml }}


# vi rabbitmq-ui/values.yaml
#yamlApplicationConfig:
#  rabbitmq:
#    clusters:
#      - name: local
#        bootstrapServers: rabbitmq-0.rabbitmq-headless.rabbitmq.svc.cluster.local:9092
#
#service:
#  type: LoadBalancer
#  port: 80
#
#resources:
#   limits:
#     cpu: 1000m
#     memory: 1024Mi
#   requests:
#     cpu: 200m
#     memory: 256Mi


- name: Install rabbitmq UI by Helm Upgrade
  shell: |
    /usr/local/bin/helm upgrade --install -f rabbitmq-ui/rabbitmq-ui-values.yaml -n rabbitmq-ui rabbitmq-ui rabbitmq-ui/
  register: install_rabbitmq_ui
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ install_rabbitmq_ui }}
  when: print_debug == true


- name: Validate if rabbitmq UI Contaienr is still Creating
  shell: |
    kubectl get pods -n rabbitmq-ui
  register: validate_rabbitmq_ui_container
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ validate_rabbitmq_ui_container }}
  when: print_debug == true


- name: Validate if rabbitmq UI Container is Running
  shell: |
    kubectl get pods -n rabbitmq-ui |  grep rabbitmq-ui | awk '{print $3}' | uniq
  register: check_rabbitmq_ui_container
  until: check_rabbitmq_ui_container.stdout.find("Running") != -1
  retries: 100
  delay: 10
- debug: msg={{ check_rabbitmq_ui_container }}
  when: print_debug == true


- name: Check LoadBalancer IP addresses for rabbitmq and rabbitmq UI
  shell: |
    kubectl get all -A | grep LoadBalancer
  register: check_lb_ipaddr
- debug: msg={{ check_lb_ipaddr }}
  when: print_debug == true

