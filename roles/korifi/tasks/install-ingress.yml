---
- name: Create Namespace for Persistent Volumes
  shell: |
    kubectl create namespace {{ _nginx.ingress.namespace }}
  register: create_namespace
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ create_namespace }}
  when: print_debug == true


- name: Copy NGINX Ingress Helm Config
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_nginx_ingress_helm_config
  with_items:
    - "ingress-nginx-values.yaml"
- debug: msg={{ copy_nginx_ingress_helm_config }}


- name: Install NGINX Ingress
  shell: |
    helm install {{ _nginx.ingress.name }} ingress-nginx/ingress-nginx -n {{ _nginx.ingress.namespace }} \
    --set controller.service.enabled=true \
    --set controller.external.enabled=true \
    --set controller.service.type=LoadBalancer \
    --set controller.service.loadBalancerIP={{ _nginx.ingress.ip_addr }}
  register: install_nginx_ingress
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ install_nginx_ingress }}


- name: Validate if NGINX Ingress Controller Containers are Running
  shell: |
    kubectl get pod -n {{ _nginx.ingress.namespace }} | grep {{ item.svc }} | awk '{print $3}' | grep Running | wc -l
  register: check_nginx_ingress_controller_container
  until: check_nginx_ingress_controller_container.stdout|int == 1
  retries: 100
  delay: 10
  with_items:
    - { svc: "ingress-nginx-controller-", replica: "{{ _nginx.ingress.replica }}" }
- debug: msg={{ check_nginx_ingress_controller_container }}
  when: print_debug == true


# https://github.com/istio/istio/issues/11973

