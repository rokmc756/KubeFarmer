---
- name: Check if the GO File Already Exists
  stat: path={{ k8s.base_path }}/go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz
  register: check_go_file


- name: Check if the GO Binary Already Exists
  stat: path=/usr/local/go/bin/go
  register: check_go_bin


- name: Copy the GO File
  copy:
    src: "go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz"
    dest: "{{ k8s.base_path }}/go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz"
    mode: 0644
    owner: root
    group: root
  register: copy_go_file
  when: check_go_file.stat.exists != True and _go.download == false


- name: Download GO File If Copy Fails
  shell: wget https://dl.google.com/go/go{{ _go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz -P {{ k8s.base_path }}
  args:
    executable: /bin/bash
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  when: _go.download == true
  # when: go_file_copied is not succeeded and go.download == true


- name: Untar GO file
  shell: tar -C /usr/local -xf {{ k8s.base_path }}/_go{{ go.major_version }}.{{ _go.minor_version }}.{{ _go.patch_version }}.linux-amd64.tar.gz
  args:
    executable: /bin/bash
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  when: check_go_bin.stat.exists != True

