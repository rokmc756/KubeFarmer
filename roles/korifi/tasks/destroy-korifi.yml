- name: Uninstall Korifi
  shell: |
    /usr/local/bin/helm uninstall korifi -n korifi
  register: uninstall_korifi
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ uninstall_korifi }}


- name: Delete the role to the cf-admin.
  shell: |
    kubectl delete rolebinding developer-binding-cf-admin
  register: delete_bind_role
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_bind_role }}


- name: Delete developer role for the cf-admin.
  shell: |
    kubectl delete role developer
  register: delete_developer_role
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_developer_role }}


- name: Delete context for the cf-admin.
  shell: |
    kubectl config delete-context cf-admin --cluster=kubernetes --user=cf-admin
  register: delete_context
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_context }}


#- name: Unset embed the certificate and key in the kubeconfig.
#  shell: |
#    kubectl config delete-credentials cf-admin --client-key=cf-admin.key --client-certificate=cf-admin.crt --embed-certs=true
#  register: unset_embed_cert_key
#  ignore_errors: true
#  args:
#    chdir: "{{ base_path }}/"
#- debug: msg={{ unset_embed_cert_key }}


#- name: Deny the certificate request
#  shell: |
#    kubectl certificate deny cf-admin
#  register: deny_cert_request
#  ignore_errors: true
#  args:
#    chdir: "{{ base_path }}/"
#- debug: msg={{ deny_cert_request }}


- name: Delete the manifest using the file you created in previous step
  shell: |
    kubectl delete -f cert-request.yaml
  register: delete_manifest_created
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_manifest_created }}


- name: Delete a Yaml file for the Certificate Request whose Content are like below
  file:
    path: "{{ base_path }}/{{ item }}"
    state: absent
  register: delete_cert_request_yaml
  ignore_errors: true
  with_items:
    - "cert-request.yaml"
    - "cf-admin.key"
    - "cf-admin.csr"
- debug: msg={{ delete_cert_request_yaml }}


# kubectl get secret --all-namespaces --field-selector type=Opaque
# kubectl get secrets -o json | jq -r "[.items[] | {name: .metadata.name, startTime: .metadata.creationTimestamp | fromdate } | select(.startTime < (now | . - XXX-date ))]" | jq -r ".[].name"
# kubectl delete secret <secret name>
# kubectl delete secret -n vnamespace $(kubectl -n vnamespace get secrets --field-selector type=my_secret -o json | jq -r "[.items[] | {name: .metadata.name, startTime: .metadata.creationTimestamp | fromdate } | select(.startTime < (now | . - 86400))]" | jq -r ".[].name")


- name: Delete Docker Register Secret
  shell: |
    kubectl -n cf delete secret image-registry-credentials
  register: delete_docker_secret
  ignore_errors: yes
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_docker_secret }}


- name: Delete Service Binding Runtime
  shell: |
    kubectl delete -f https://github.com/servicebinding/runtime/releases/download/v0.9.0/servicebinding-runtime-v{{ servicebinding.major_version }}.{{ servicebinding.minor_version }}.{{ servicebinding.patch_version }}.yaml
  register: delete_service_binding_runtime
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_service_binding_runtime }}


- name: Unintall Metrics Server
  shell: |
    /usr/local/bin/helm uninstall metrics-server -n metrics-server
  register: uninstall_metrics_server
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ uninstall_metrics_server }}


- name: Delete Metrics Server Config Yaml
  file:
    path: "{{ base_path }}/{{ item }}"
    state: absent
  register: delete_metrics_server_config_yaml
  ignore_errors: true
  with_items:
    - "metrics-server-values.yaml"
- debug: msg={{ delete_metrics_server_config_yaml }}


- name: Unintall Contour
  shell: |
    /usr/local/bin/helm uninstall contour -n contour
  register: uninstall_contour
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ uninstall_contour }}
  # v1.29.1


- name: Delete Kpack
  shell: |
    kubectl delete -f https://github.com/buildpacks-community/kpack/releases/download/v{{ kpack.major_version }}.{{ kpack.minor_version }}.{{ kpack.patch_version }}/release-{{ kpack.major_version }}.{{ kpack.minor_version }}.{{ kpack.patch_version }}.yaml
  register: delete_kpack
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_kpack }}


# --version should be helm chart version, not app version
- name: Uninstall Reflector
  shell: |
    /usr/local/bin/helm uninstall reflector -n reflector
  register: uninstall_reflector
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ uninstall_reflector }}
  # 7.1.262


- name: Delete Directory for Korifi Persistent Volumes
  file:
    path: "/mnt/korifi-storage"
    state: absent
    mode: 0777
  register: delete_korifi_pv_dir
  ignore_errors: true
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items:
    - "{{ groups['all'] }}"
- debug: msg={{ delete_korifi_pv_dir }}
  when: print_debug == true


- name: Delete Namespaces
  shell: |
    kubectl delete namespace {{ item }}
  register: delete_namespaces
  ignore_errors: true
  with_items:
    - metrics-server
    - reflector
    - korifi
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_namespaces }}
  when: print_debug == true


- name: Delete CF Namespace
  shell: |
    kubectl delete ns cf --grace-period=0 --force &
    sleep 10
  register: delete_cf_namespace
  ignore_errors: yes
- debug: msg={{ delete_cf_namespace }}


- name: Force Delete CF Namespace
  shell: |
    kubectl get namespace "cf" -o json   | tr -d "\n" | sed "s/\"finalizers\": \[[^]]\+\]/\"finalizers\": []/" | \
    kubectl replace --raw /api/v1/namespaces/cf/finalize -f -
  register: force_delete_cf_namespace
  ignore_errors: yes
- debug: msg={{ force_delete_cf_namespace }}


- name: Delete Namespaces Config Yaml
  file:
    path: "{{ base_path }}/{{ item }}"
    state: absent
  register: delete_namespaces_config_yaml
  ignore_errors: true
  with_items:
    - "korifi-ns.yaml"
    - "cf-ns.yaml"
- debug: msg={{ delete_namespaces_config_yaml }}

