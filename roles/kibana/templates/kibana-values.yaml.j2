diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity


replicaCount: "{{ _kibana.replica }}"


updateStrategy:
  type: RollingUpdate


schedulerName: ""
priorityClassName: ""
terminationGracePeriodSeconds: ""


automountServiceAccountToken: false


savedObjects:
  urls: []
  configmap: ""


configurationCM: ""


extraEnvVarsCM: ""


extraEnvVarsSecret: ""


volumePermissions:
  enabled: false
  resourcesPreset: "nano"


persistence:
  enabled: true
  storageClass: ""
  existingClaim: ""
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  subPath: ""


forceInitScripts: false
initScriptsCM: ""
initScriptsSecret: ""


service:
  ports:
    http: 5601
  type: ClusterIP
  nodePorts:
    http: ""
  clusterIP: ""
  loadBalancerIP: ""
  externalTrafficPolicy: Cluster
  sessionAffinity: None


networkPolicy:
  enabled: true
  allowExternal: true
  allowExternalEgress: true


ingress:
  enabled: false
  pathType: ImplementationSpecific
  apiVersion: ""
  hostname: kibana.local
  path: /
  tls: false
  selfSigned: false
  ingressClassName: ""


serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: false


containerPorts:
  http: 5601


podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  fsGroup: 1001


containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"


resourcesPreset: "small"


resources: {}
podAffinityPreset: ""
podAntiAffinityPreset: soft


nodeAffinityPreset:
  type: ""
  key: ""
  values: []


pdb:
  create: true
  minAvailable: ""
  maxUnavailable: ""


configuration:
  server:
    basePath: ""
    host: "0.0.0.0"
    publicBaseUrl: ""
    rewriteBasePath: false


metrics:
  enabled: true
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "80"
      prometheus.io/path: "_prometheus/metrics"
  serviceMonitor:
    enabled: false
    namespace: ""
    jobLabel: ""
    interval: ""
    scrapeTimeout: ""
    relabelings: []
    selector: {}
    labels: {}
    honorLabels: false


tls:
  enabled: false
  autoGenerated: false
  existingSecret: ""
  usePemCerts: false
  keyPassword: ""
  keystorePassword: ""
  passwordsSecret: ""


elasticsearch:
  hosts: []
  port: ""
  security:
    auth:
      enabled: false
      kibanaPassword: "changeme"
      existingSecret: ""
      createSystemUser: true
      elasticsearchPasswordSecret: "changeme"
    tls:
      enabled: false
      verificationMode: "full"
      existingSecret: ""
      usePemCerts: false
      truststorePassword: ""
      passwordsSecret: ""

