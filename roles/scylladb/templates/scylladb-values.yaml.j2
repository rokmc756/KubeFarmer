diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity


dbUser:
  user: cassandra
  forcePassword: false
  password: "changeme"
  existingSecret: ""


initDBConfigMap: ""
initDBSecret: ""
existingConfiguration: ""


cluster:
  name: scylladb
  seedCount: 3
  numTokens: 256
  datacenter: dc1
  rack: rack1
  endpointSnitch: SimpleSnitch
  extraSeeds: []
  enableUDF: false


jvm:
  extraOpts: ""
  maxHeapSize: ""
  newHeapSize: ""


command: []
args: []
extraEnvVars: []
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
replicaCount: "{{ _scylladb.replica }}"
updateStrategy:
  type: RollingUpdate


nameResolutionThreshold: 5
nameResolutionTimeout: 5
automountServiceAccountToken: false
hostAliases: []
podManagementPolicy: OrderedReady
priorityClassName: ""
statefulsetLabels: {}
statefulsetAnnotations: {}
podLabels: {}
podAffinityPreset: ""
podAntiAffinityPreset: soft


nodeAffinityPreset:
  type: ""
  key: ""
  values: []


affinity: {}
nodeSelector: {}
tolerations: []
topologySpreadConstraints: []


resourcesPreset: "large"
resources: {}
lifecycleHooks: {}
schedulerName: ""
terminationGracePeriodSeconds: ""
extraVolumes: []
extraVolumeMounts: []
initContainers: []
sidecars: []


pdb:
  create: true
  minAvailable: ""
  maxUnavailable: ""


hostNetwork: false


containerPorts:
  intra: 7000
  tls: 7001
  jmx: 7199
  cql: 9042
  cqlShard: 19042
  api: 10000
  metrics: 9180


extraContainerPorts: []


hostPorts:
  intra: ""
  tls: ""
  jmx: ""
  cql: ""
  cqlShard: ""
  api: ""
  metrics: ""


jmxProxy:
  enabled: false
  resourcesPreset: "micro"


autoscaling:
  vpa:
    enabled: false
    annotations: {}
    controlledResources: []
    maxAllowed: {}
    minAllowed: {}
    updatePolicy:
      updateMode: Auto
  hpa:
    annotations: {}
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: ""
    customRules: []
    behavior: {}


serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: false


service:
  type: ClusterIP
  ports:
    cql: 9042
    cqlShard: 19042
    metrics: 8080
  nodePorts:
    cql: ""
    cqlShard: ""
    metrics: ""
  extraPorts: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  clusterIP: ""
  externalTrafficPolicy: Cluster
  annotations: {}
  sessionAffinity: None
  sessionAffinityConfig: {}
  headless:
    annotations: {}
  internal:
    enabled: true
    labels: {}
    annotations: {}
    extraPorts: []


networkPolicy:
  enabled: true
  allowExternal: true
  allowExternalEgress: true
  extraIngress: []
  extraEgress: []
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}


persistence:
  enabled: true
  existingClaim: ""
  storageClass: "{{ _scylladb.storage_class}}"
  commitStorageClass: ""
  annotations: {}
  accessModes:
    - ReadWriteOnce
  mountPath: /bitnami/scylladb
  size: 8Gi
  commitLog:
    storageClass: ""
    annotations: {}
    accessModes:
      - ReadWriteOnce
    size: 2Gi
    mountPath: ""


volumePermissions:
  enabled: false
  resourcesPreset: "nano"
  resources: {}
  securityContext:
    seLinuxOptions: {}
    runAsUser: 0


metrics:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: monitoring
    interval: ""
    scrapeTimeout: ""
    selector: {}
    metricRelabelings: []
    relabelings: []
    honorLabels: false
    jobLabel: ""
    labels: {}


tls:
  internodeEncryption: none
  clientEncryption: false
  existingSecret: ""
  existingCASecret: ""
  certFilename: tls.crt
  certKeyFilename: tls.key
  certCAFilename: ""
  autoGenerated:
    enabled: true
    engine: helm
    certManager:
      existingIssuer: ""
      existingIssuerKind: ""
      keySize: 2048
      keyAlgorithm: RSA
      duration: 2160h
      renewBefore: 360h


sysctl:
  enabled: true
  sysctls:
    "fs.aio-max-nr": "30000000"
  resourcesPreset: "nano"
  resources: {}

