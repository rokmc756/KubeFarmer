# https://kubebyexample.com/learning-paths/kubevirt-fundamentals/guided-exercise-installing-kubevirt
# https://virtualtech.tistory.com/623
# https://kmaster.tistory.com/87
# https://platform9.com/blog/get-up-and-running-with-kubevirt-for-kubernetes-based-vm-management/
# https://kubevirt.io/quickstart_kind/
# https://kubebyexample.com/learning-paths/kubevirt-fundamentals/guided-exercise-installing-kubevirt
# https://kubevirt-manager.io/get_started.html
# https://medium.com/btech-engineering/deploy-your-vm-in-kubernetes-cluster-using-kubevirt-4d0750970a74
# https://www.baeldung.com/ops/kubevirt-kubernetes-addon-guide
# https://github.com/kubevirt-manager/kubevirt-manager


# VERSION="$(curl --silent https://storage.googleapis.com/kubevirt-prow/release/kubevirt/kubevirt/stable.txt)"
- name: Get KubeVirt Version
  shell: |
    curl --silent https://storage.googleapis.com/kubevirt-prow/release/kubevirt/kubevirt/stable.txt
  register: kubevirt_version
- debug: msg={{ kubevirt_version }}
  when: print_debug == true


- name: Create KubeVirt Operator
  shell: |
    kubectl create --filename="https://github.com/kubevirt/kubevirt/releases/download/{{ kubevirt_version.stdout }}/kubevirt-operator.yaml"
  register: create_kubevirt_operator
- debug: msg={{ create_kubevirt_operator }}
  when: print_debug == true


- name: Check if KubeVirt Operaotr Pod are Running Normally
  shell: kubectl get all -n kubevirt | grep pod/virt-{{ item }}
  register: check_kubevirt_operator
  ignore_errors: yes
  until: check_kubevirt_operator.stdout.find("Running") != -1
  retries: 50
  with_items:
    - "operator"
- debug: msg={{ check_kubevirt_operator }}


- name: Create KubeVirt CRDs
  shell: |
    kubectl create --filename="https://github.com/kubevirt/kubevirt/releases/download/{{ kubevirt_version.stdout }}/kubevirt-cr.yaml"
  register: create_kubevirt_crds
- debug: msg={{ create_kubevirt_crds }}
  when: print_debug == true


- name: Check if KubeVirt CRDs Pod are Running Normally
  shell: kubectl get all -n kubevirt | grep pod/virt-{{ item }}
  register: check_kubevirt_crds
  ignore_errors: yes
  until: check_kubevirt_crds.stdout.find("Running") != -1
  retries: 50
  with_items:
    - "handler"
    - "controller"
    - "api"
- debug: msg={{ check_kubevirt_crds }}


- name: Validate if KubeVirt Is Successfully Deployed
  shell: kubectl get kubevirt.kubevirt.io/kubevirt --namespace kubevirt --output=jsonpath="{.status.phase}"
  register: check_deploy_kubevirt
  until: check_deploy_kubevirt.stdout.find("Deployed") == -1
  retries: 10
- debug: msg={{ check_deploy_kubevirt }}


#- name: Get KubeVirt Version
#  shell: kubectl get kubevirt.kubevirt.io/kubevirt -n kubevirt -o=jsonpath="{.status.observedKubeVirtVersion}"
#  register: kubevirt_version
#- debug: msg={{ kubevirt_version }}
#  when: print_debug == true


# curl --silent https://storage.googleapis.com/kubevirt-prow/release/kubevirt/kubevirt/stable.txt
- name: Get KubeVirt Version
  shell: |
    echo $(uname --kernel-name | tr A-Z a-z)-$(uname --machine | sed 's/x86_64/amd64/') || windows-amd64.exe
  register: kubevirt_arch
- debug: msg={{ kubevirt_arch }}
  when: print_debug == true


- name: Get KubeVirt CLI
  shell: |
    curl -L -o virtctl https://github.com/kubevirt/kubevirt/releases/download/{{ kubevirt_version.stdout }}/virtctl-{{ kubevirt_version.stdout }}-{{ kubevirt_arch.stdout }}
    chmod +x virtctl
  register: get_kubevirt_cli
  ignore_errors: true
  args:
    chdir: "/root"
- debug: msg={{ get_kubevirt_cli }}
  when: print_debug == true


- name: Install KubeVirt CLI
  shell: |
    sudo install virtctl /usr/local/bin
  register: install_kubevirt_cli
  ignore_errors: true
  args:
    chdir: "/root"
- debug: msg={{ install_kubevirt_cli }}
  when: print_debug == true


- name: Print KubeVirt CLI Version
  shell: |
    virtctl version
  register: print_kubevirt_cli_version
  ignore_errors: true
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  args:
    executable: /bin/bash
    chdir: "/root"
- debug: msg={{ print_kubevirt_cli_version }}
  when: print_debug == true

# https://kubevirt.io/2023/Managing-KubeVirt-VMs-with-Ansible.html

