#- name: Check Rook Pods
#  shell: kubectl get all -n cattle-system
#  register: check_rook_pods
#  ignore_errors: yes
#  until: check_rook_pods.stdout.find("pending") == -1
#  retries: 10
#- debug: msg={{ check_rook_pods }}


#- name: Uninstall NGINX Ingress
#  shell: |
#    /usr/local/bin/helm uninstall nginx-ingress --namespace=nginx-ingress
#  register: uninstall_nginx_ingress
#  ignore_errors: yes
#  args:
#    chdir: "{{ base_path }}/kubernetes-ingress/deployments/helm-chart"
#- debug: msg={{ uninstall_nginx_ingress }}
#
#
#- name: Delete NGINX Ingress CRDs
#  shell: |
#    kubectl delete -f crds/ --namespace=nginx-ingress
#  register: delete_nginx_ingress_crds
#  ignore_errors: yes
#  args:
#    chdir: "{{ base_path }}/kubernetes-ingress/deployments/helm-chart"
#- debug: msg={{ delete_nginx_ingress_crds }}


- name: Delete the Metallb Config for VMware
  shell: |
    kubectl delete -f "{{ base_path }}"/metallb-config-vmware.yaml
  register: delete_metallb_config
  ignore_errors: yes
  until: delete_metallb_config is succeeded
- debug: msg={{ delete_metallb_config }}


- name: Delete Secret for Metallb Namespace
  shell: |
    kubectl delete secret -n metallb-system memberlist
  register: delete_metallb_secret
  ignore_errors: yes
- debug: msg={{ delete_metallb_secret }}


#- name: Delete the Metallb Native
#  shell: |
#    kubectl delete -f \
#    https://raw.githubusercontent.com/metallb/metallb/v{{ metallb.major_version }}.{{ metallb.minor_version }}.{{ metallb.patch_version }}/config/manifests/metallb-native.yaml
#  register: apply_metallb_native_config
#- debug: msg={{ apply_metallb_native_config }}


- name: Uninstall the Metallb Native
  shell: |
    /usr/local/bin/helm uninstall metallb -n metallb-system
  register: uninstall_metallb_native_config
  ignore_errors: yes
- debug: msg={{ uninstall_metallb_native_config }}


- name: Delete Namespace for Metallb
  shell: |
    kubectl delete namespace metallb-system
  register: delete_metallb_namespace
  ignore_errors: yes
- debug: msg={{ delete_metallb_namespace }}


- name: Check strictARP
  shell: |
    kubectl get configmap kube-proxy -n kube-system -o yaml | grep strictARP
  register: check_strict_arp
  ignore_errors: yes
- debug: msg={{ check_strict_arp }}


- name: Rollback strictARP for VMWare or Cloud
  shell: |
    kubectl get configmap kube-proxy -n kube-system -o yaml | \
    sed -e "s/strictARP: true/strictARP: false/" | kubectl apply -f - -n kube-system
  register: rollback_strict_arp
  ignore_errors: yes
- debug: msg={{ rollback_strict_arp }}


- name: Remove Metallb Config Yaml File and Kubernetes-ingress
  file:
    path: "{{ item }}"
    state: absent
  register: remove_config_yaml_and_kube_ingress_dir
  with_items:
    - "{{ base_path }}/metallb-config-vmware.yaml"
    - "{{ base_path }}/kubernetes-ingress"
- debug: msg={{ remove_config_yaml_and_kube_ingress_dir }}



# [ Check Rook and NGINX Ingress ]
# kubectl get events --all-namespaces  --sort-by='.metadata.creationTimestamp'
# kubectl -n cattle-system describe pods
# kubectl -n cattle-system get all
# kubectl -n cattle-system get pods
# kubectl -n cattle-system logs <pod-name>

