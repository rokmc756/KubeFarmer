---
- name: Uninstall Grafana
  shell: |
    helm uninstall grafana --namespace {{ _grafana.namespace }}
  register: uninstall_grafana
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ uninstall_grafana }}
  when: print_debug == true


- name: Validate if Grafana Containers are Deleted Completedly
  shell: |
    kubectl get pods -n {{ _grafana.namespace }} | sed 1d | grep grafana- | awk '{print $3}' | grep -E 'Running|Terminating' | wc -l
  register: delete_grafana_container
  ignore_errors: true
  until: delete_grafana_container.stdout|int == 0
  retries: 100
  delay: 10
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ delete_grafana_container }}
  when: print_debug == true


- name: Delete Persistent Volumes, Claim and Storage Class
  shell: |
    kubectl delete -f {{ item }}
  register: delete_pvc
  ignore_errors: true
  with_items:
    - "local-storage-pvc.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-class.yaml"
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ delete_pvc }}
  when: print_debug == true


- name: Delete Local PVC Config Yaml
  file:
    path: "{{ base_path }}/{{ item }}"
    state: absent
  register: delete_local_pvc_config_yaml
  ignore_errors: true
  with_items:
    - "local-storage-pvc.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-class.yaml"
- debug: msg={{ delete_local_pvc_config_yaml }}
  when: print_debug == true


- name: Delete Namespace for Persistent Volumes
  shell: |
    kubectl delete namespace {{ _grafana.namespace }}
  register: delete_namespace
  ignore_errors: true
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ delete_namespace }}
  when: print_debug == true

