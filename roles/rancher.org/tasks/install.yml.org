## Install Metallb and Rancher
## * https://metallb.universe.tf/installation/
## * https://oopflow.medium.com/setup-install-rancher-onto-existing-kubernetes-cluster-for-high-availability-7351f0284592
## * https://infohub.delltechnologies.com/en-us/l/suse-rancher-and-rke-kubernetes-cluster-using-csi-driver-on-dell-emc-powerflex-1/steps-to-install-suse-rancher-server-on-the-kubernetes-cluster/
## * https://kubernetes.io/docs/tutorials/stateless-application/expose-external-ip-address/
## * https://cla9.tistory.com/94
## * https://docs.tigera.io/calico-enterprise/latest/networking/configuring/advertise-service-ips

#- name: X
#  shell: |
#    kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system
#  register: X
#  until: X
#- debug: msg={{ X }}

# kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.11/config/manifests/metallb-native.yaml

#- name: X
#  shell: |
#    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
#    chmod 700 get_helm.sh
#    ./get_helm.sh
#  register: X
#  until: X
#- debug: msg={{ X }}


#- name: X
#  shell: |
#    kubectl create namespace metallb-system
#  register: X
#  until: X
#- debug: msg={{ X }}


#- name: X
#  shell: |
#    helm repo add metallb https://metallb.github.io/metallb
#  register: X
#  until: X
#- debug: msg={{ X }}


#- name: X
#  shell: |
#    helm install metallb metallb/metallb -n metallb-system
#  register: X
#  until: X
#- debug: msg={{ X }}

#- name: X
#  shell: |
#    kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.11/config/manifests/metallb-native.yaml
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    mkdir /metallb-config
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#$ vi /metallb-config/metallb-config.yaml
#~~~
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: config
#  namespace: metallb-system
#data:
#  config: |
#    address-pools:
#    - name: default
#      protocol: layer2
#      addresses:
#      - 192.168.1.180-192.168.1.250
#
#
#- name: X
#  shell: |
#    kubectl apply -f /metallb-config/metallb-config.yaml
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    git clone https://github.com/nginxinc/kubernetes-ingress.git --branch v3.0.2
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    cd kubernetes-ingress/deployments/helm-chart
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    helm repo add nginx-stable https://helm.nginx.com/stable
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    helm repo update
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    helm install nginx-ingress nginx-stable/nginx-ingress --namespace=nginx-ingress --create-namespace=true
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl delete ingressclass nginx --all-namespaces
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl get ingressclass --all-namespaces
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    helm install nginx-ingress .
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl apply -f crds/ --namespace=nginx-ingress
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl delete -f crds/ --namespace=nginx-ingress
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl apply -f crds/ --namespace=nginx-ingress
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    helm upgrade nginx-ingress nginx-stable/nginx-ingress --namespace=nginx-ingress
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
#    helm repo update
#    kubectl delete namespace cattle-system
#    kubectl create namespace cattle-system
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.crds.yaml
#    helm repo add jetstack https://charts.jetstack.io
#    helm repo update
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl create namespace cert-manager
#    helm install \
#    cert-manager jetstack/cert-manager \
#    --namespace cert-manager \
#    --version v1.7.1 \
#    --debug
#  register: X
#  until: X
#- debug: msg={{ X }}
##  --set webhook.hostNetwork=true \
#
#
#- name: X
#  shell: |
#    kubectl get pods --namespace cert-manager
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
## OK
#- name: X
#  shell: |
#    helm install cert-manager jetstack/cert-manager \
#    --namespace cert-manager \
#    --version v1.7.1 \
#    --set webhook.hostNetwork=true \
#    --set webhook.securePort=10260 \
#    --set startupapicheck.timeout=1m \
#    --debug
#  register: X
#  until: X
#- debug: msg={{ X }}
## --set installCRDs=true \
## --create-namespace \
#
#
#- name: X
#  shell: |
#    kubectl get pods --namespace cert-manager
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl apply -f /kubernetes_config/rancher/rancher-loadbalancer.yml
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl -n cattle-system get all
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
## helm install rancher rancher-stable/rancher \
##  --version 2.6.4 \
##  --namespace cattle-system \
##  --set hostname=rancher.test.co.th \
##  --set replicas=3
#
#- name: X
#  shell: |
#    helm install rancher rancher-stable/rancher \
#    --namespace cattle-system \
#    --set hostname=rancher.jtest.suse.com \
#    --set replicas=3
#  register: X
#  until: X
#- debug: msg={{ X }}
## Error: INSTALLATION FAILED: chart requires kubeVersion: < 1.29.0-0 which is incompatible with Kubernetes v1.30.1
#
#
#- name: X
#  shell: |
#    kubectl -n cattle-system rollout status deploy/rancher
#  register: X
#  until: X
#- debug: msg={{ X }}
#
#
#- name: X
#  shell: |
#    kubectl -n cattle-system get all
#  register: X
#  until: X
#- debug: msg={{ X }}



## References
## * https://github.com/rancher/rancher/issues/37193
## * https://kubernetes.github.io/ingress-nginx/user-guide/exposing-tcp-udp-services/

## ~~~
## $ kubectl expose deployment nginx-ingress-controller --type=LoadBalancer --name=nginx-ingress -n nginx-ingress
## service/nginx-ingress exposed
## ~~~





#$ kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system
#
#$ kubectl get configmap kube-proxy -n kube-system -o yaml | grep strictARP
#
#$ kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.11/config/manifests/metallb-native.yaml
#
#$ kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
#
#$ metallb-config-vmware.yaml
#
#$ apply -f /metallb-config/metallb-config-vmware.yaml
#
#$ git clone https://github.com/nginxinc/kubernetes-ingress.git --branch v3.0.2
#
#$ cd kubernetes-ingress/deployments/helm-chart
#
#$ helm repo add nginx-stable https://helm.nginx.com/stable
#
#$ helm repo update
#
#$ helm install nginx-ingress nginx-stable/nginx-ingress --namespace=nginx-ingress --create-namespace=true
#
#$ kubectl apply -f crds/ --namespace=nginx-ingress
#
#$ kubectl delete -f crds/ --namespace=nginx-ingress
#
#$ kubectl apply -f crds/ --namespace=nginx-ingress
#
#$ helm upgrade nginx-ingress nginx-stable/nginx-ingress --namespace=nginx-ingress
#
#$ helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
#
#$ helm repo update
#
#$ kubectl create namespace cattle-system
#
#$ kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.crds.yaml
#
#$ kubectl create namespace cert-manager
#
#$ helm repo add jetstack https://charts.jetstack.io
#
#$ helm repo update
#
#$ helm install   cert-manager jetstack/cert-manager   --namespace cert-manager   --version v1.7.1
#
#$ vi /kubernetes_config/rancher/rancher-loadbalancer.yml
#
#$ kubectl apply -f /kubernetes_config/rancher/rancher-loadbalancer.yml
#
#$ kubectl get all -n cattle-system
#
#$ helm install rancher rancher-stable/rancher   --namespace cattle-system   --set hostname=rancher.jtest.suse.com
#
#$ kubectl -n cattle-system rollout status deploy/rancher
#
#$ kubectl get all -n cattle-system
#
#$ kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}{{"\n"}}'

