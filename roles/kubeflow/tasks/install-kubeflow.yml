# https://mlops-for-all.github.io/docs/appendix/metallb
# https://kmaster.tistory.com/156
# https://github.com/kubeflow/kubeflow/issues/5271


- name: Load Kernel Modules for KubeFlow
  shell: |
    modprobe {{ item }}
  with_items:
    - nf_nat
    - xt_REDIRECT
    - xt_owner
    - iptable_nat
    - iptable_mangle
    - iptable_filter


- name: Check if the Kubeflow is Already Downloaded
  stat: path={{ base_path }}/manifests
  register: kubeflow_dir_existed
- debug: msg={{ kubeflow_dir_existed }}


- name: Clone Kubeflow
  shell: |
    git -C "{{ base_path }}" clone --single-branch --branch v{{ kubeflow.major_version }}.{{ kubeflow.minor_version }}.{{ kubeflow.patch_version }} \
    https://github.com/kubeflow/manifests.git           # common/istio-1-22
  register: git_clone_kubeflow
  ignore_errors: true
  when: kubeflow.clone_git == true and kubeflow_dir_existed.stat.exists != True
- debug: msg={{ git_clone_kubeflow }}
  when: print_debug == true and kubeflow.clone_git == true and kubeflow_dir_existed.stat.exists != True



#- name: Validate if KubeFlow Containers are still Creating
#  shell: |
#    kubectl get all -A | grep {{ item }} | awk '{print $4}' | uniq | cut -d : -f 1
#  register: check_kubeflow_containers
#  until: check_kubeflow_containers.stdout.find("") != -1
#  retries: 100
#  delay: 10
#  with_items:
#    - Init
#    - PodIntializing
#    - ContainerCreating
#    - CrashLoopBackOff
#- debug: msg={{ check_kubeflow_containers }}
#  when: print_debug == true


#- name: Check KubeFlow Ingress
#  shell: |
#    kubectl get service -n istio-system istio-ingressgateway
#  register: check_kubeflow_ingress
#- debug: msg={{ check_kubeflow_ingress }}
#  when: print_debug == true


#- name: Change MinIO User Password
#  shell: |
#    kubectl -n kubeflow get secrets mlpipeline-minio-artifact -o yaml | \
#    sed -e "s/$(echo minio123|base64|sed -e s/K$/=$/g)/$(echo changeme123|base64|sed -e s/K$/=/g)/g" | \
#    kubectl -n kubeflow apply -f -
#  register: change_minio_user_password
#- debug: msg={{ change_minio_user_password }}
#  when: print_debug == true


#- name: Restart Deployment for Applying MinIO Password Changed
#  shell: |
#    kubectl rollout restart deployment -n kubeflow
#  register: restart_deployment
#- debug: msg={{ restart_deployment }}
#  when: print_debug == true


# python3 -c 'from passlib.hash import bcrypt; import getpass; print(bcrypt.using(rounds=12, ident="2y").hash(getpass.getpass()))'
# Password:
# $2y$12$Tup0fFXFr0ZNpI.CS8ot4.9bhbk1QJcFCh.Tf41XKnBfaapMHVLha

# Change CluserIP to LoadBalancer
# kubectl -n istio-system patch svc istio-ingressgateway \
# -p '{"spec": {"ports": [{"port": 443,"targetPort": 443,"name": "https"},{"port": 80,"targetPort": 80,"name": "http"}],"type": "LoadBalancer"}}'

# https://github.com/kubeflow/manifests#change-default-user-password
# https://yjwang.tistory.com/entry/kubeflow-dex-%EC%95%94%ED%98%B8-%EB%B3%80%EA%B2%BD
# https://v0-7.kubeflow.org/docs/started/k8s/kfctl-existing-arrikto/


# kubectl -n kubeflow get gateways.networking.istio.io kubeflow-gateway -o yaml
#apiVersion: networking.istio.io/v1beta1
#kind: Gateway
#metadata:
#  annotations:
#    kubectl.kubernetes.io/last-applied-configuration: |
#      {"apiVersion":"networking.istio.io/v1alpha3","kind":"Gateway","metadata":{"annotations":{},"name":"kubeflow-gateway","namespace":"kubeflow"},"spec":{"selector":{"istio":"ingressgateway"},"servers":[{"hosts":["*"],"port":{"name":"http","number":80,"protocol":"HTTP"}}]}}
#  creationTimestamp: "2024-06-17T07:36:29Z"
#  generation: 2
#  name: kubeflow-gateway
#  namespace: kubeflow
#  resourceVersion: "73363"
#  uid: fb1aba7b-5763-4c09-af26-77fdc164bc8f
#spec:
#  selector:
#    istio: ingressgateway
#  servers:
#  - hosts:
#    - '*'
#    port:
#      name: http
#      number: 80
#      protocol: HTTP
#    tls:
#      httpsRedirect: true
#  - hosts:
#    - '*'
#    port:
#      name: https
#      number: 443
#      protocol: HTTPS
#    tls:
#      mode: SIMPLE
#      privateKey: /etc/istio/ingressgateway-certs/tls.key
#      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt


# Note. Your Kubernetes cluster must have StorageClass for dynamic volume provisioning for Katib DB.
# For more information, check the Kubernetes documentation on dynamic provisioning. 
# If your cluster doesnâ€™t have dynamic volume provisioning, you must manually deploy PersistentVolume (PV) to bind PVC for the Katib DB component.
#
# https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/
# https://prathapreddy-mudium.medium.com/dynamic-volume-provisioning-in-kubernetes-19fc6a02e19d
# https://waspro.tistory.com/771


# kubectl get secret mlpipeline-minio-artifact -n kubeflow -o jsonpath="{.data.accesskey}" | base64 --decode
# minio
# kubectl get secret mlpipeline-minio-artifact -n kubeflow -o jsonpath="{.data.secretkey}" | base64 --decode
# minio123


# kubectl -n kubeflow get secrets mlpipeline-minio-artifact -o yaml | \
# sed -e "s/$(echo minio123|base64|sed -e s/K$/=$/g)/$(echo changeme123|base64|sed -e s/K$/=/g)/g" | \
# kubectl -n kubeflow apply -f -


