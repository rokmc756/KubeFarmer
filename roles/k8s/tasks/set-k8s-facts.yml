---
# https://serverfault.com/questions/1040246/how-to-select-network-interface-given-ip-address-in-ansible-across-debian-and-fr
#
- name: Get Network Interface Names from Prefix of IP Addresses Provided for Kubernetes Nodes
  set_fact:
    netdev0: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', k8s.net.ipaddr0 ) | map(attribute='device') | first }}"
    netdev1: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', k8s.net.ipaddr1 ) | map(attribute='device') | first }}"
    # netdev2: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', k8s.net.ipaddr2 ) | map(attribute='device') | first }}"

#
- name: Get IP Address From Provided Network Device Names
  set_fact:
    ipaddr0: "{{ hostvars[inventory_hostname]['ansible_'~netdev0].ipv4.address }}"
    ipaddr1: "{{ hostvars[inventory_hostname]['ansible_'~netdev1].ipv4.address }}"
    # ipaddr2: "{{ hostvars[inventory_hostname]['ansible_'~netdev2].ipv4.address }}"


# https://stackoverflow.com/questions/36328907/ansible-get-all-the-ip-addresses-of-a-group
#- name: Define Facts for All Worker's Hostname
#  set_fact:
#    all_ext1_hostnames: "{{ groups['all'] | map('extract', hostvars, ['ansible_hostname']) | join(' ') }}"
#- debug: msg={{ all_ext1_hostnames }}

#
#- name: Define Fact for All Worker's First IP Address
#  set_fact:
#    all_net0_ipaddrs: "{{ groups['all'] | map('extract', hostvars, ['ansible_'~netdev0, 'ipv4', 'address']) | join(',') }}"
#- debug: msg={{ all_net0_ipaddrs }}


- set_fact:
    rh_install_pks: "{{ rh_common_pkgs ~ ',' ~ rh_common_devel_pkgs  ~ ',' ~ rh7_common_devel_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int <= 7
- set_fact:
    rh_install_pkgs: "{{ rh_common_pkgs ~ ',' ~ rh_common_devel_pkgs  ~ ',' ~ rh8_common_devel_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int == 8
- set_fact:
    rh_install_pkgs: "{{ rh_common_pkgs ~ ',' ~ rh_common_devel_pkgs  ~ ',' ~ rh9_common_devel_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int >= 9
- set_fact:
    install_pkgs: "{{ rh_install_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )


- set_fact:
    ubt_install_pkgs: "{{ ubt_common_pkgs ~ ',' ~ ubt_common_devel_pkgs  ~ ',' ~ ubt20_common_devel_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and ansible_distribution_major_version|int <= 20
- set_fact:
    ubt_install_pkgs: "{{ ubt_common_pkgs ~ ',' ~ ubt_common_devel_pkgs  ~ ',' ~ ubt22_common_devel_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and ansible_distribution_major_version|int == 22
- set_fact:
    ubt_install_pkgs: "{{ ubt_common_pkgs ~ ',' ~ ubt_common_devel_pkgs  ~ ',' ~ ubt23_common_devel_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and ansible_distribution_major_version|int >= 23
- set_fact:
    install_pkgs: "{{ ubt_install_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" )


- set_fact:
    suse_install_pkgs: "{{ suse_common_pkgs ~ ',' ~ suse_common_devel_pkgs  ~ ',' ~ suse15_common_devel_pkgs }}"
  when: ansible_distribution == "openSUSE Leap" and ansible_distribution_major_version|int <= 15
- set_fact:
    install_pkgs: "{{ suse_install_pkgs }}"
  when: ansible_distribution == "openSUSE Leap"


# Define Variables for Docker Packages of each Linux Distributions
#
- set_fact:
    update_repo_cache: "dnf makecache"
    docker_pkgs: "{{ rh_docker_pkgs }}"
    lock_kube_cmds: "yum versionlock kubelet kubeadm kubectl"
    unlock_kube_cmds: "yum versionlock clear kubelet kubeadm kubectl"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )

- set_fact:
    update_repo_cache: "apt update"
    docker_pkgs: "{{ ubt_docker_pkgs }}"
    lock_kube_cmds: "apt-mark hold kubelet kubeadm kubectl"
    unlock_kube_cmds: "apt-mark unhold kubelet kubeadm kubectl"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" )

- set_fact:
    update_repo_cache: "zypper refresh -B"
    docker_pkgs: "{{ suse_docker_pkgs }}"
    lock_kube_cmds: "zypper addlock kubelet kubeadm kubectl"
    unlock_kube_cmds: "zypper removelock kubelet kubeadm kubectl"
  when: ansible_distribution == "openSUSE Leap"


