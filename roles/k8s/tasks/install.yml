---
- name: Add line into /etc/locale.conf for LC_TYPE to prevent error
  lineinfile:
    path: /etc/locale.conf
    line: "LC_CTYPE=en_US.UTF-8"
  register: lctype_line_added

#
- name: Unset variables of token and certs generated previously by kubeadm init
  set_fact:
    token_ca_cert:
    token_01:

#
- name: Enable br_netfilter and overlay module for iptables in all nodes
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

#
- name: Enable bridge module for iptables to route packets into kubernetes cluster nodes
  copy:
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1

#
- name: Apply kernel parameters for kubernetes cluster
  command: sysctl --system

#
- name: Initialize containerd
  shell: |
    containerd config default > /etc/containerd/config.toml
  # command: containerd config default | tee /etc/containerd/config.toml

#
- name: Edit containerd configuration
  lineinfile:
    dest: /etc/containerd/config.toml
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '            SystemdCgroup = false', line: '            SystemdCgroup = true', state: present, backrefs: no }
  # - { regexp: 'runc.options', line: '            SystemdCgroup = true', state: present }
  #   firstmatch: yes

#
- name: Restart containerd to apply SystemdCgroup in config.toml in all nodes
  systemd:
    name: containerd
    state: restarted
    enabled: yes
  register: containerd_enabled
  until: containerd_enabled is succeeded
  retries: 20
  delay: 20

#
- name: Enable and start docker in all nodes
  systemd:
    name: docker
    state: started
    enabled: yes
  register: docker_enabled
  until: docker_enabled is succeeded
  retries: 20
  delay: 20

#
- name: Creates docker directory under /etc in all nodes
  file:
    path: /etc/docker
    state: directory

#
- name: Configure the docker daemon to use systemd for the management of the cotainer's cgroups in all nodes
  template: src=daemon.json.j2 dest=/etc/docker/daemon.json owner=root group=root mode=644 force=yes
  register: cgroup_docker_configured

#
- name: Restart docker daemon in all nodes
  systemd:
    name: docker
    state: restarted
    enabled: yes
  register: docker_restarted
  until: docker_restarted is succeeded
  retries: 10
  delay: 10

#
- name: Configure the kubelet daemon to use systemd for the management of the cotainer's cgroups in all nodes
  template: src=kubelet.j2 dest=/etc/sysconfig/kubelet owner=root group=root mode=644 force=yes
  register: kubernetes_repo_added

#
- name: Enable and Start kubelet in all nodes
  systemd:
    name: kubelet
    state: restarted
    enabled: yes
    daemon_reload: yes

#
- name: Enable Cgroup in all nodes
  service: name=cgconfig state=started enabled=yes
  when: hostvars[inventory_hostname].ansible_distribution_major_version|int < 9

#
- name: Lock versions to avoid unwanted updated yum update in all nodes
  command: yum versionlock kubelet kubeadm kubectl
  register: virsions_lock
  # command: yum versionlock kubelet-{{ k8s_major_version }}.{{ k8s_minor_version }}.{{ k8s_patch_version }} kubectl-{{ k8s_major_version }}.{{ k8s_minor_version }}.{{ k8s_patch_version }} kubeadm-{{ k8s_major_version }}.{{ k8s_minor_version }}.{{ k8s_patch_version }}

#
- name: Create Cluster configuration in master node
  shell: |
    kubeadm config print init-defaults | tee /root/cluster-config.yaml
  register: cluster_config_created
  when: inventory_hostname in groups['master']

#
- name: Modify cluster-config.yaml to replace "{{ hostvars[inventory_hostname]['ansible_'~netdev1]['ipv4']['address'] }}" with Control Plane's IP address
  lineinfile:
    dest: /root/cluster-config.yaml
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
    backrefs: "{{ item.backrefs }}"
  with_items:
    - { regexp: "^  name: node", line: "  name: {{ ansible_hostname }}", state: present, backrefs: yes }
    - { regexp: "^  advertiseAddress: 1.2.3.4", line: "  advertiseAddress: {{ hostvars[inventory_hostname]['ansible_'~netdev1]['ipv4']['address'] }}", state: present, backrefs: yes }
    - { regexp: "^  criSocket: /var/run/dockershim.sock", line: "  criSocket: /run/containerd/containerd.sock", state: present, backrefs: yes }
  when: inventory_hostname in groups['master']

#
- name: Modify cluster-config.yaml
  lineinfile:
    path: /root/cluster-config.yaml
    line: "{{ item.content }}"
    insertafter: EOF
    create: true
  with_items:
    - { content: '---' }
    - { content: 'apiVersion: kubelet.config.k8s.io/v1beta1' }
    - { content: 'kind: KubeletConfiguration' }
    - { content: 'cgroupDriver: systemd' }
  when: inventory_hostname in groups['master']

#
- name: Disable swap in order to initialize Kubernetes master
  shell: |
    swapoff -a
    sed -i '/swap/s/^/#/g' /etc/fstab

#
- name: Change Kubelet systemd file
  template: src=kubelet.systemd.j2 dest=/usr/lib/systemd/system/kubelet.service owner=root group=root mode=644 force=yes
  register: kubelet_systemd_changed

#
#- name: Move temoporary Kubelet systemd file in recursive directory of /usr/lib/systemd/system/kubelet.service.d to /tmp directory
#  shell: mv -f /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf /tmp/
#  register: kubeadm_conf_moved

#
- name: Enable and Start kubelet in all nodes
  systemd:
    name: kubelet
    state: restarted
    enabled: yes
    daemon_reload: yes
