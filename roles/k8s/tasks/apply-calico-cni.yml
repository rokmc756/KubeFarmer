# url: https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
- name: Download Calico Networking
  get_url:
    url: "{{ k8s.cni.calico.download_url }}/v{{ k8s.cni.calico.major_version }}.{{ k8s.cni.calico.minor_version }}.{{ k8s.cni.calico.patch_version }}/manifests/calico.yaml"
    dest: "{{ k8s.base_path }}/calico.yaml"
    mode: 0644
  register: calico_downloaded
  when: inventory_hostname in groups['master']
- debug: msg={{ calico_downloaded }}
  when: print_debug == true and inventory_hostname in groups['master']


- name: Modify {{ k8s.base_path }}/calica.yaml for CIDR
  lineinfile:
    dest: "{{ k8s.base_path }}/calico.yaml"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
    backrefs: "{{ item.backrefs }}"
  register: modify_calica_yaml
  with_items:
    - { regexp: "^            # - name: CALICO_IPV4POOL_CIDR",                                line: "            - name: CALICO_IPV4POOL_CIDR",                                                      state: present, backrefs: yes }
    - { regexp: "^            #   value: \"192.168.0.0/16\"",                                 line: "              value: \"{{ k8s.cni.pod_network }}\"",                                            state: present, backrefs: yes }
    - { regexp: "^  calico_backend: \"bird\"",                                                line: "  calico_backend: \"vxlan\"",                                                                   state: present, backrefs: yes }
    - { regexp: "^            # Enable IPIP",                                                 line: "            - name: IP_AUTODETECTION_METHOD\n              value: \"interface={{ netdev1 }}\"", state: present, backrefs: yes }
  when: inventory_hostname in groups['master']
- debug: msg={{ modify_calica_yaml }}
  when: print_debug == true and inventory_hostname in groups['master']


- name: Replace {{ k8s.base_path }}/calica.yaml for CIDR
  replace:
    path: "{{ k8s.base_path }}/calico.yaml"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
    backup: "{{ item.backup }}"
  register: replace_calica_yaml
  with_items:
    - { regexp: "^            - name: CALICO_IPV4POOL_IPIP\n              value: \"Always\"", line: "            - name: CALICO_IPV4POOL_IPIP\n              value: \"Never\"",                      state: present, backup: yes }
    - { regexp: "^            - name: CALICO_IPV4POOL_VXLAN\n              value: \"Never\"", line: "            - name: CALICO_IPV4POOL_VXLAN\n              value: \"Always\"",                    state: present, backup: yes }
    - { regexp: "^            - name: CALICO_IPV6POOL_VXLAN\n              value: \"Never\"", line: "            - name: CALICO_IPV6POOL_VXLAN\n              value: \"Always\"",                    state: present, backup: yes }
  when: k8s.cni.calico.enable_vxlan == true and inventory_hostname in groups['master']
- debug: msg={{ replace_calica_yaml }}
  when: print_debug == true and k8s.cni.calico.enable_vxlan == true and inventory_hostname in groups['master']


- name: Delete Bird Lines In {{ k8s.base_path }}/calica.yaml
  lineinfile:
    dest: "{{ k8s.base_path }}/calico.yaml"
    regexp: "{{ item.regexp }}"
    state: "{{ item.state }}"
    backrefs: "{{ item.backrefs }}"
  register: delete_bird_lines
  with_items:
    - { regexp: "^              - -bird-live", state: absent, backrefs: yes }
    - { regexp: "^              - -bird-ready", state: absent, backrefs: yes }
  when: k8s.cni.calico.enable_vxlan == true and inventory_hostname in groups['master']
- debug: msg={{ delete_bird_lines }}
  when: print_debug == true and k8s.cni.calico.enable_vxlan == true and inventory_hostname in groups['master']


- name: Setup Calico Networking
  command: kubectl apply -f {{ k8s.base_path }}/calico.yaml
  register: calico_network_setup
  when: inventory_hostname in groups['master']
- debug: msg={{ calico_network_setup }}
  when: print_debug == true and inventory_hostname in groups['master']


- name: Check if Calicoctl Exists
  stat: path=/usr/local/bin/calicoctl
  register: calicoctl_bin_exists
- debug: msg={{ calicoctl_bin_exists }}
  when: print_debug == true


- name: Unarchive Calicoctl Tarball
  unarchive:
    src: "calicoctl-v{{ k8s.cni.calico.major_version }}.{{ k8s.cni.calico.minor_version }}.{{ k8s.cni.calico.patch_version }}.tar.gz"
    dest: "/usr/local/bin/"
    mode: 0755
    owner: root
    group: root
  register: unarchive_calicoctl_tarball
  when: calicoctl_bin_exists.stat.exists == false and upload_calico == true
- debug: msg={{ unarchive_calicoctl_tarball }}
  when: print_debug == true and calicoctl_bin_exists.stat.exists == false and upload_calico == true


# curl -o /root/calicoctl -O -L https://github.com/projectcalico/calicoctl/releases/download/v{{ k8s.cni.calicoctl.major_version }}.{{ k8s.cni.calicoctl.minor_version }}.{{ k8s.cni.calicoctl.patch_version }}/calicoctl
# curl -L https://github.com/projectcalico/calico/releases/download/v3.27.3/calicoctl-linux-amd64 -o /root/calicoctl
- name: Install Calicoctl
  shell: |
    curl -o {{ k8s.base_path }}/calicoctl -O -L https://github.com/projectcalico/calico/releases/download/v{{ k8s.cni.calico.major_version }}.{{ k8s.cni.calico.minor_version }}.{{ k8s.cni.calico.patch_version }}/calicoctl-linux-amd64
    chmod +x {{ k8s.base_path }}/calicoctl
    mv {{ k8s.base_path }}/calicoctl /usr/local/bin/
  register: install_calicoctl
  when: upload_calico == false and calicoctl_bin_exists.stat.exists == true and inventory_hostname in groups['master']
- debug: msg={{ install_calicoctl }}
  when: print_debug == true and upload_calico == false and calicoctl_bin_exists.stat.exists == false and inventory_hostname in groups['master']

# Calico with kubernetes
# https://medium.com/@jeetanshu/networking-in-multi-node-kubernetes-cluster-the-role-of-calico-dcd78367845e

# Disable BGP and Enable VXLAN
# https://cwal.tistory.com/12

