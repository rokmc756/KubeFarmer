---
- name: Enable Firewalld
  systemd:
    name: firewalld
    state: started
    enabled: yes

#
- name: Allow Kubernetes Service Ports for Master Node
  firewalld:
    permanent: yes
    immediate: yes
    port: "{{ item.port }}/{{ item.proto }}"
    state: "{{ item.state }}"
    zone: "{{ item.zone }}"
  with_items: "{{ master_ports }}"
  when: inventory_hostname in groups['master']

#
- name: Allow Kubernetes Service Ports for Workder Nodes
  firewalld:
    permanent: yes
    immediate: yes
    port: "{{ item.port }}/{{ item.proto }}"
    state: "{{ item.state }}"
    zone: "{{ item.zone }}"
  with_items: "{{ workers_ports }}"
  when: inventory_hostname in groups['workers']


- name: Reload Firewalld
  command: firewall-cmd --reload


#- name: Stop Firewalld
#  systemd:
#    name: firewalld
#    state: stopped
#    enabled: yes


- name: Disabling SELinux to be required by Kubnernates Cluster
  selinux:
    state: disabled
  register: selinux_disabled
  notify:
    - Restart System
    - Waiting for Server to Come Back After Reboot
  failed_when: selinux_disabled.msg | default('ok', True) is not search('(^ok$|libselinux-python|(SELinux state changed))')
- debug: msg={{ selinux_disabled }}
  when: print_debug == true


- name: Check if SELinux has been Disabled in Configurtion File
  command: grep SELINUX /etc/selinux/config
  register: sevalue
  when: ansible_distribution == "openSUSE Leap"
- debug: msg={{ sevalue }}
  when: print_debug == true and ansible_distribution == "openSUSE Leap"


- name: Check if SELinux has been Disabled in Configurtion File
  command: grep SELINUX /etc/sysconfig/selinux
  register: sevalue
  when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky"
- debug: msg={{ sevalue }}
  when: print_debug == true and ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )

