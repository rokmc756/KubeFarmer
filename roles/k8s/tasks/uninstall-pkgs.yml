---
- name: Reset Kubernetes
  command: kubeadm reset -f
  register: reset_kube
  ignore_errors: yes
  when: inventory_hostname in groups['master']
- debug: msg={{ reset_kube }}
  when: print_debug == true and inventory_hostname in groups['master']


- name: Unlock Those Versions to Prevent Them from Being Automatically Updated
  shell: |
    {{ unlock_kube_cmds }}
  register: unlock_kube_cmds
  ignore_errors: yes
- debug: msg={{ unlock_kube_cmds }}
  when: print_debug == true


- name: Uninstall Kubeadm Packages
  package:
    name: "{{ item }}"
    state: absent
  register: uninstall_kube_pkgs
  ignore_errors: yes
  with_items:
    - "kubectl"
    - "kubelet"
    - "kubeadm"
- debug: msg={{ uninstall_kube_pkgs }}
  when: print_debug == true


#- name: Uninstall RPM Packages of Dependenies to Need Installing Packages Regarding Kubernates
#  package:
#    name: "{{ item }}"
#    state: absent
#  ignore_errors: yes
#  with_items: "{{ install_pkgs }}"

#- name: Remove Kubernetes Repository
#  shell: |
#    zypper ar -f https://pkgs.k8s.io/core:/stable:/v{{ k8s.major_version }}.{{ k8s.minor_version }}/rpm/ kubernetes
#    rpm --import https://pkgs.k8s.io/core:/stable:/v{{ k8s.major_version }}.{{ k8s.minor_version }}/rpm/repodata/repomd.xml.key


- name: Uninstall Docker Packages
  package:
    name: "{{ item }}"
    state: absent
  register: uninstall_docker_pkgs
  ignore_errors: yes
  with_items:
    - "{{ docker_pkgs }}"
- debug: msg={{ uninstall_docker_pkgs }}
  when: print_debug == true

