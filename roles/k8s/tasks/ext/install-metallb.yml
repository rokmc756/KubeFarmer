---
- name: Flush IP Route Cache
  shell: |
    ip route flush cache
  register: flush_ip_route_cache
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['all'] }}"
- debug: msg={{ flush_ip_route_cache }}


- name: Apply StrictARP for VMWare or Cloud
  shell: |
    kubectl get configmap kube-proxy -n kube-system -o yaml | \
    sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system
  register: apply_strict_arp
- debug: msg={{ apply_strict_arp }}


- name: Create Namespace for Metallb
  shell: |
    kubectl create namespace metallb-system
  register: create_metallb_namespace
- debug: msg={{ create_metallb_namespace }}


- name: Apply the Metallb
  shell: |
    kubectl apply -f \
    https://raw.githubusercontent.com/metallb/metallb/v{{ metallb_version }}/config/manifests/metallb-native.yaml
  register: apply_metallb_native_config
  ignore_errors: yes
- debug: msg={{ apply_metallb_native_config }}
# /usr/local/bin/helm install metallb metallb/metallb -n metallb-system


- name: Create Secret for Metallb Namespace
  shell: |
    kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  register: create_metallb_secret
  ignore_errors: yes
- debug: msg={{ create_metallb_secret }}


- name: Copy Metallb Config for VMware
  template:
    src: metallb-config-vmware.yaml.j2
    dest: "{{ base_path }}/metallb-config-vmware.yaml"
  register: copy_metallb_vmware_yaml
- debug: msg={{ copy_metallb_vmware_yaml }}


- name: Apply the Metallb Config for VMware
  shell: |
    kubectl apply -f "{{ base_path }}"/metallb-config-vmware.yaml
  register: apply_metallb_config
  until: apply_metallb_config is succeeded
  retries: 100
- debug: msg={{ apply_metallb_config }}

