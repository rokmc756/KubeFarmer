---
- name: Delete the Metallb Config for VMware
  shell: |
    kubectl delete -f "{{ base_path }}"/metallb-config-vmware.yaml
  register: delete_metallb_config
  ignore_errors: true
  until: delete_metallb_config is succeeded
- debug: msg={{ delete_metallb_config }}


- name: Delete Secret for Metallb Namespace
  shell: |
    kubectl delete secret -n metallb-system memberlist
  register: delete_metallb_secret
  ignore_errors: true
- debug: msg={{ delete_metallb_secret }}


- name: Delete the Metallb
  shell: |
    kubectl delete -f \
    https://raw.githubusercontent.com/metallb/metallb/v{{ _metallb.major_version }}.{{ _metallb.minor_version }}.{{ _metallb.patch_version }}/config/manifests/metallb-native.yaml
  register: delete_metallb
  ignore_errors: true
- debug: msg={{ delete_metallb }}
# /usr/local/bin/helm uninstall metallb -n metallb-system
# kubectl delete -f \
# https://raw.githubusercontent.com/metallb/metallb/v{{ _metallb.major_version }}.{{ _metallb.minor_version }}.{{ _metallb.patch_version }}/config/manifests/metallb-native.yaml


- name: Delete Namespace for Metallb
  shell: |
    kubectl delete ns metallb-system --grace-period=0 --force &
    sleep 20
  register: delete_metallb_namespace
  ignore_errors: true
- debug: msg={{ delete_metallb_namespace }}
  # kubectl delete ns metallb-system


- name: Force Delete Namespace for Metallb
  shell: |
    kubectl get namespace "metallb-system" -o json   | tr -d "\n" | sed "s/\"finalizers\": \[[^]]\+\]/\"finalizers\": []/" | \
    kubectl replace --raw /api/v1/namespaces/metallb-system/finalize -f -
  register: force_delete_metallb_namespace
  ignore_errors: true
- debug: msg={{ force_delete_metallb_namespace }}


- name: Rollback strictARP for VMWare or Cloud
  shell: |
    kubectl get configmap kube-proxy -n kube-system -o yaml | \
    sed -e "s/strictARP: true/strictARP: false/" | kubectl apply -f - -n kube-system
  register: rollback_strict_arp
  ignore_errors: true
- debug: msg={{ rollback_strict_arp }}


- name: Remove Metallb Config Yaml File and Kubernetes-ingress
  file:
    path: "{{ item }}"
    state: absent
  register: remove_config_yaml_and_kube_ingress_dir
  ignore_errors: true
  with_items:
    - "{{ base_path }}/metallb-config-vmware.yaml"
    - "{{ base_path }}/kubernetes-ingress"
- debug: msg={{ remove_config_yaml_and_kube_ingress_dir }}

