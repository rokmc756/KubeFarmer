- name: Create Directory for Persistent Volumes
  file:
    path: "{{ geode.storage_path }}"
    state: directory
    owner: root
    group: root
    mode: 0777
  register: create_pv_dir
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items:
    - "{{ groups['all'] }}"
- debug: msg={{ create_pv_dir }}
  when: print_debug == true


- name: Create Namespace for Persistent Volumes
  shell: |
    kubectl create namespace {{ item }}
  register: create_namespace
  with_items:
    - geode
    - istio-system
- debug: msg={{ create_namespace }}
  when: print_debug == true


- name: Copy Cluster Local PVC Config Yaml
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_cluster_local_pvc_config_yaml
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
- debug: msg={{ copy_cluster_local_pvc_config_yaml }}


- name: Cluster Settings for a Production Cluster Running in a Dynamic Cloud Environment including VMware
  shell: |
    kubectl create -f {{ item }}
  register: create_pvc
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ create_pvc }}
  when: print_debug == true


# Install Chart with specific cluster size
# By default, this Chart will create a geode cluster with one locator and 3 servers. If you want to change the cluster size during installation, you can use --set config.num_locators={value} to specify number of locators and --set config.num_servers={value} to specify the number of servers.
#
# For example: To start 5 servers

# helm install --set config.num_servers=5 incubator/geode
# Install Chart with specific resource size
# By default, this Chart creates a locator with 50m JVM heap and a server with 100m JVM heap. If you want to give more memory to your locator, you can use --set memory.max_locators={value} and for the servers --set memory.max_servers={value}.

# For example: To start servers with 20G memory
# helm install --set memory.max_servers=20g incubator/geode
#

# /usr/local/bin/helm install geode bitnami/geode -n geode --create-namespace
- name: Deploy Geode
  shell: |
    /usr/local/bin/helm install geode google-geode/geode -n geode --create-namespace
  register: deploy_geode
- debug: msg={{ deploy_geode }}
  when: print_debug == true


- name: Validate if geode Controller Containers are Running
  shell: |
    kubectl get pods -n geode |  grep geode- | awk '{print $3}' | sort | uniq
  register: check_geode_controller_container
  until: check_geode_controller_container.stdout.find("Running") != -1
  retries: 100
  delay: 10
- debug: msg={{ check_geode_controller_container }}
  when: print_debug == true

