---
- name: Uninstall Hadoop
  shell: |
    /usr/local/bin/helm uninstall hadoop -n {{ _hadoop.namespace }}
  register: uninstall_hadoop
  ignore_errors: true
- debug: msg={{ uninstall_hadoop }}
  ignore_errors: true
  when: print_debug == true


- name: Validate if Hadoop Controller Containers are Deleted
  shell: |
    kubectl get pods -n {{ _hadoop.namespace }} | grep {{ item.svc }} | awk '{print $3}' | grep -E "Running|Terminating" | wc -l
  register: check_hadoop_containers
  until: check_hadoop_containers.stdout|int == 0
  retries: 100
  delay: 10
  with_items:
    - { svc: "hadoop-hdfs-nn", replica: "{{ _hadoop.hdfs.nn.replica }}" }
    - { svc: "hadoop-hdfs-dn", replica: "{{ _hadoop.hdfs.dn.replica }}" }
    - { svc: "hadoop-yarn-rm", replica: "{{ _hadoop.yarn.rm.replica }}" }
    - { svc: "hadoop-yarn-nm", replica: "{{ _hadoop.yarn.nm.replica }}" }
- debug: msg={{ check_hadoop_containers }}
  when: print_debug == true


- name: Copy Cluster Local PVC Config Yaml
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_cluster_local_pvc_config_yaml
  ignore_errors: true
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
- debug: msg={{ copy_cluster_local_pvc_config_yaml }}
  ignore_errors: true
  when: print_debug == true


- name: Delete Persistent Volumes, Claim and Storage Class
  shell: |
    kubectl delete -f {{ item }}
  register: delete_pvc
  ignore_errors: true
  with_items:
    - "local-storage-pvc.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-class.yaml"
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ delete_pvc }}
  ignore_errors: true
  when: print_debug == true


- name: Delete Cluster Local PVC Config Yaml
  file:
    path: "{{ base_path }}/{{ item }}"
    state: absent
  register: delete_cluster_local_pvc_config_yaml
  ignore_errors: true
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
- debug: msg={{ delete_cluster_local_pvc_config_yaml }}
  ignore_errors: true
  when: print_debug == true


- name: Delete Namespace for Persistent Volumes
  shell: |
    kubectl delete namespace {{ _hadoop.namespace }}
  register: delete_namespace
  ignore_errors: true
  #with_items:
  #  - hadoop
  #  - istio-system
- debug: msg={{ delete_namespace }}
  ignore_errors: true
  when: print_debug == true


- name: Delete Hadoop Helm Config
  file:
    path: "{{ base_path }}/{{ item }}"
    state: absent
  register: delete_hadoop_helm_config
  with_items:
    - "hadoop-values.yaml"
- debug: msg={{ delete_hadoop_helm_config }}

