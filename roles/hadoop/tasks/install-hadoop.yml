# https://www.cnblogs.com/liugp/p/16726178.html
- name: Create Directory for Persistent Volumes
  file:
    path: "{{ hadoop.storage_path }}"
    state: directory
    owner: root
    group: root
    mode: 0777
  register: create_pv_dir
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items:
    - "{{ groups['all'] }}"
- debug: msg={{ create_pv_dir }}
  when: print_debug == true


- name: Create Namespace for Persistent Volumes
  shell: |
    kubectl create namespace {{ item }}
  register: create_namespace
  with_items:
    - hadoop
    - istio-system
- debug: msg={{ create_namespace }}
  when: print_debug == true


- name: Copy Cluster Local PVC Config Yaml
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_cluster_local_pvc_config_yaml
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
- debug: msg={{ copy_cluster_local_pvc_config_yaml }}


- name: Cluster Settings for a Production Cluster Running in a Dynamic Cloud Environment including VMware
  shell: |
    kubectl create -f {{ item }}
  register: create_pvc
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
  args:
    chdir: "{{ base_path }}/"
- debug: msg={{ create_pvc }}
  when: print_debug == true


# /usr/local/bin/helm install hadoop hadoop/hadoop -n hadoop
# --set persistence.existingClaim={data-hadoop-redis-0,data-hadoop-trivy-0,database-data-hadoop-database-0,hadoop-jobservice,hadoop-registry} \
# --create-namespace


# /usr/local/bin/helm install hadoop hadoop/hadoop -f {{ base_path }}/hadoop-values.yaml --create-namespace -n hadoop
- name: Deploy Hadoop
  shell: |
    helm install hadoop -n hadoop --create-namespace \
    --set persistence.nameNode.enabled=true \
    --set persistence.nameNode.storageClass=standard \
    --set persistence.dataNode.enabled=true \
    --set persistence.dataNode.storageClass=standard \
    apache-hadoop-helm/hadoop
  register: deploy_hadoop
- debug: msg={{ deploy_hadoop }}
  when: print_debug == true


- name: Validate if Hadoop Controller Containers are Running
  shell: |
    kubectl get pods -n hadoop | grep {{ item }} | awk '{print $3}' | uniq
  register: check_hadoop_containers
  until: check_hadoop_containers.stdout.find("Running") != -1
  retries: 100
  delay: 10
  with_items:
    - hadoop-hdfs-dn
    - hadoop-hdfs-nn
    - hadoop-yarn-nm
    - hadoop-yarn-rm
- debug: msg={{ check_hadoop_containers }}
  when: print_debug == true

