---
- name: Create Namespace for Persistent Volumes
  shell: |
    kubectl create namespace {{ item }}
  register: create_namespace
  with_items:
    - powerdns
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ create_namespace }}
  when: print_debug == true


- name: Copy Cluster Local PVC Config Yaml
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_cluster_local_pvc_config_yaml
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
    - "pdns-storage-pvc.yaml"
- debug: msg={{ copy_cluster_local_pvc_config_yaml }}


- name: Cluster Settings for a Production Cluster Running in a Dynamic Cloud Environment including VMware
  shell: |
    kubectl create -f {{ item }}
  register: create_pvc
  with_items:
    - "local-storage-class.yaml"
    - "local-storage-pv.yaml"
    - "local-storage-pvc.yaml"
    - "pdns-storage-pvc.yaml"
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ create_pvc }}
  when: print_debug == true


- name: Copy PowerDNS Loadbalancer Config Yaml
  template:
    src: "{{ item }}.j2"
    dest: "{{ base_path }}/{{ item }}"
  register: copy_powerdns_lb_config_yaml
  with_items:
    - "powerdns-values.yaml"
    - "powerdns-admin-values.yaml"
- debug: msg={{ copy_powerdns_lb_config_yaml }}


- name: Deploy PowerDNS
  shell:
    helm install powerdns k8s-at-home/powerdns -n powerdns -f {{ base_path }}/powerdns-values.yaml \
    --version {{ _powerdns.major_version }}.{{ _powerdns.minor_version }}.{{ _powerdns.patch_version }}
  register: deploy_powerdns
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ deploy_powerdns }}
  when: print_debug == true


- name: Validate if PowerDNS Containers are Running Normally
  shell: |
    kubectl get pods -n powerdns | grep powerdns- | grep -v powerdns-postgresql- | awk '{print $3}' | grep Running | wc -l
  register: check_powerdns_container
  until: check_powerdns_container.stdout|int == _powerdns.dns.replica|int
  retries: 60
  delay: 10
  args:
    chdir: "{{ base_path }}/"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- debug: msg={{ check_powerdns_container }}
  when: print_debug == true

