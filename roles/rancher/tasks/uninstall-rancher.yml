- name: Clone Rancher Cleanup
  shell: |
    git -C "{{ base_path }}" clone https://github.com/rancher/rancher-cleanup.git
  register: clone_rancher_cleanup
  ignore_errors: true
- debug: msg={{ clone_rancher_cleanup }}
  # --branch v{{ nginx.k8s_ingress.major_version }}.{{ nginx.k8s_ingress.minor_version }}.{{ nginx.k8s_ingress.patch_version }}


# kubectl delete clusterrolebindings.rbac.authorization.k8s.io cleanup-admin -n kube-system
- name: Cleanup Rancher
  shell: |
    kubectl create -f rancher-cleanup.yaml
  register: cleanup_rancher
  ignore_errors: yes
  args:
    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
- debug: msg={{ cleanup_rancher }}


#- name: Watch Cleanup Logs
#  shell: |
#    kubectl -n kube-system logs -l job-name=cleanup-job -f
#  register: watch_cleanup_logs
#- debug: msg={{ watch_cleanup_logs }}


- name: Check if Rancher Namespaces are Still Active
  shell: kubectl get namespaces | grep -E 'cattle|fleet'
  register: check_active_namespaces
  ignore_errors: true
  until: check_active_namespaces.stdout.find("Active") == -1
  retries: 100
  delay: 10
- debug: msg={{ check_active_namespaces }}


- name: Check if Rancher Namespaces are Still Terminating
  shell: kubectl get namespaces | grep -E 'cattle|fleet'
  register: check_terminating_namespaces
  ignore_errors: true
  until: check_terminating_namespaces.stdout.find("Terminating") == -1
  retries: 20
  delay: 10
- debug: msg={{ check_terminating_namespaces }}


#- name: Delete Cleanup Rancher
#  shell: |
#    kubectl delete -f rancher-cleanup.yaml
#  register: delete_cleanup_rancher
#  ignore_errors: yes
#  args:
#    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
#- debug: msg={{ delete_cleanup_rancher }}


# 2
#- name: Verify Cleanup Rancher
#  shell: |
#    kubectl create -f verify.yaml
#  register: verify_cleanup_rancher
#  ignore_errors: yes
#  args:
#    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
#- debug: msg={{ verify_cleanup_rancher }}


#- name: Delete Verify Cleanup Rancher
#  shell: |
#    kubectl delete -f verify.yaml
#  register: delete_verify_cleanup_rancher
#  ignore_errors: yes
#  args:
#    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
#- debug: msg={{ delete_verify_cleanup_rancher }}


# 1
#- name: Delete Cleanup Rancher Pod and Service Accounts / ClusterRoleBindings
#  shell: |
#    kubectl delete $(kubectl get all -n kube-system | grep job.batch/cleanup-job | awk '{print $1}') -n kube-system
#  register: delete_cleanup_rancher_pod
#  ignore_errors: yes
#  args:
#    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
#- debug: msg={{ delete_cleanup_rancher_pod }}


- name: Check if Cleanup Pod is Still Terminating
  shell: kubectl get all -n kube-system
  register: check_cleanup_job_pod
  ignore_errors: yes
  until: check_cleanup_job_pod.stdout.find("Terminating") == -1
  retries: 20
- debug: msg={{ check_cleanup_job_pod }}


#- name: Delete Verify Cleanup Rancher
#  shell: |
#    kubectl delete -f verify.yaml
#  register: delete_verify_cleanup_rancher
#  ignore_errors: yes
#  args:
#    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
#- debug: msg={{ delete_verify_cleanup_rancher }}



#- name: Check if Rancher is Deployed Successfully
#  shell: kubectl get all -n cattle-system
#  register: check_rancher_deployment
#  ignore_errors: yes
#  until: check_rancher_deployment.stdout.find("Terminating") == -1
#  retries: 20
#- debug: msg={{ check_rancher_deployment }}


# https://stackoverflow.com/questions/52369247/namespace-stucked-as-terminating-how-i-removed-it
#- name: Get IP Address of Rancher Load Balancer and Nginx Ingress Controller
#  shell: |
#    kubectl get all -A | grep -E "service/rancher-loadbalancer|service/nginx-ingress-controller"
#  register: get_ipaddr_rancher_lb
#  ignore_errors: yes
#- debug: msg={{ get_ipaddr_rancher_lb }}



# [ Check Rancher and NGINX Ingress ]
# kubectl get events --all-namespaces  --sort-by='.metadata.creationTimestamp'
# kubectl -n cattle-system describe pods
# kubectl -n cattle-system get all
# kubectl -n cattle-system get pods
# kubectl -n cattle-system logs <pod-name>

#
- name: Verify Cleanup Rancher
  shell: |
    kubectl create -f verify.yaml
  register: verify_cleanup_rancher
  ignore_errors: yes
  args:
    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
- debug: msg={{ verify_cleanup_rancher }}


#
- name: Delete Cleanup Rancher Pod and Service Accounts / ClusterRoleBindings
  shell: |
    kubectl delete $(kubectl get all -n kube-system | grep job.batch/cleanup-job | awk '{print $1}') -n kube-system
  register: delete_cleanup_rancher_pod
  ignore_errors: yes
  args:
    chdir: "{{ base_path }}/rancher-cleanup/deploy/"
- debug: msg={{ delete_cleanup_rancher_pod }}


- name: Remove Rancher Cleanup Directory
  shell: |
    rm -rf /root/rancher-cleanup
  register: remove_rancher_cleanup_dir
  ignore_errors: true
- debug: msg={{ remove_rancher_cleanup_dir }}


#
- name: Get the list of Remaining ServiceAccounts for Rancher NameSpace
  shell: |
    kubectl get ServiceAccount -A | grep cattle | awk '{print $1}'
  register: get_service_accounts_ns
  ignore_errors: yes
- debug: msg={{ get_service_accounts_ns }}


- name: Delete Rancher NameSpaces for Serivce Accounts
  shell: |
    kubectl delete ServiceAccount default -n {{ item }}
  register: delete_service_accounts_ns
  ignore_errors: yes
  with_items: "{{ get_service_accounts_ns.stdout_lines }}"
- debug: msg={{ delete_service_accounts_ns }}


# kubectl delete clusterrolebindings.rbac.authorization.k8s.io cleanup-admin

# "Error from server (AlreadyExists): error when creating \"rancher-cleanup.yaml\": serviceaccounts \"cleanup-service-account\" already exists",
# "Error from server (AlreadyExists): error when creating \"rancher-cleanup.yaml\": clusterrolebindings.rbac.authorization.k8s.io \"cleanup-admin\" already exists"

# clusterrolebindings.rbac.authorization.k8s.io \"cleanup-admin\" already exists"
# clusterrolebindings.rbac.authorization.k8s.io \"cleanup-admin\" already exists"
# serviceaccount/cleanup-service-account created\njob.batch/cleanup-job created"
# serviceaccount/cleanup-service-account created", "job.batch/cleanup-job created"

# 2024/05/30 11:48:05 [ERROR] defaultSvcAccountHandler: Sync: error handling default ServiceAccount of namespace key=cattle-fleet-local-system, err=Operation cannot be fulfilled on namespaces "cattle-fleet-local-system": the object has been modified; please apply your changes to the latest version and try again
# 2024/05/30 11:48:05 [ERROR] defaultSvcAccountHandler: Sync: error handling default ServiceAccount of namespace key=cattle-fleet-local-system, err=Operation cannot be fulfilled on namespaces "cattle-fleet-local-system": the object has been modified; please apply your changes to the latest version and try again

