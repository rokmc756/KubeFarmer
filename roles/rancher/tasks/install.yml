
- name: X
  shell: |
    kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl get configmap kube-proxy -n kube-system -o yaml | grep strictARP
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.11/config/manifests/metallb-native.yaml
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    metallb-config-vmware.yaml
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl apply -f /metallb-config/metallb-config-vmware.yaml
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    git clone https://github.com/nginxinc/kubernetes-ingress.git --branch v3.0.2
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    cd kubernetes-ingress/deployments/helm-chart
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm repo add nginx-stable https://helm.nginx.com/stable
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm repo update
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm install nginx-ingress nginx-stable/nginx-ingress --namespace=nginx-ingress --create-namespace=true
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl apply -f crds/ --namespace=nginx-ingress
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl delete -f crds/ --namespace=nginx-ingress
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl apply -f crds/ --namespace=nginx-ingress
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm upgrade nginx-ingress nginx-stable/nginx-ingress --namespace=nginx-ingress
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm repo update
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl create namespace cattle-system
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.crds.yaml
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl create namespace cert-manager
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm repo add jetstack https://charts.jetstack.io
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm repo update
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm install   cert-manager jetstack/cert-manager   --namespace cert-manager   --version v1.7.1
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    vi /kubernetes_config/rancher/rancher-loadbalancer.yml
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl apply -f /kubernetes_config/rancher/rancher-loadbalancer.yml
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl get all -n cattle-system
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    helm install rancher rancher-stable/rancher --namespace cattle-system --set hostname=rancher.jtest.suse.com
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl -n cattle-system rollout status deploy/rancher
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl get all -n cattle-system
  register: X
  until: X
- debug: msg={{ X }}


- name: X
  shell: |
    kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}{{"\n"}}'
  register: X
  until: X
- debug: msg={{ X }}

