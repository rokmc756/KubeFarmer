k8s:
	@if [ "${r}" = "reinit" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "single" ]; then\
                        if [ -z ${c} ];  then\
                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} reinit-k8s.yml -e '{single_master: True}' -e '{multi_master: False}' --tags='reinit';\
                        else\
                                echo "No Actions for Reinitializing Kubernetes Single Master Cluster";\
                        fi\
                elif [ ! -z ${r} ] && [ "${s}" = "multi" ]; then\
                        if [ -z ${c} ];  then\
                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} reinit-k8s.yml -e '{single_master: True}' -e '{multi_master: True}' --tags='reinit';\
                        else\
                                echo "No Actions for Reinitializing Kubernetes Multi Master Cluster";\
                        fi\
                else\
                        echo "No Actions for Reinitializing Kubernetes Cluster";\
                fi;\
	elif [ "${r}" = "install" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "single" ]; then\
                        if [ -z ${c} ];  then\
                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-k8s.yml -e '{single_master: True}' -e '{multi_master: False}' --tags='install';\
                        else\
                                echo "No Actions for Installing Kubernetes Single Master Cluster";\
                        fi\
                elif [ ! -z ${r} ] && [ "${s}" = "multi" ]; then\
                        if [ -z ${c} ];  then\
                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} setup-k8s.yml -e '{single_master: True}' -e '{multi_master: True}' --tags='install';\
                        else\
                                echo "No Actions for Installing Kubernetes Multi Master Cluster";\
                        fi\
                else\
                        echo "No Actions for Installing Kubernetes Cluster";\
                fi;\
	elif [ "${r}" = "uninstall" ]; then\
                if [ ! -z ${r} ] && [ "${s}" = "single" ]; then\
                        if [ -z ${c} ];  then\
                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} destroy-k8s.yml -e '{single_master: True}' -e '{multi_master: False}' --tags='uninstall';\
                        else\
                                echo "No Actions for Uninstalling Kubernetes Single Master Cluster";\
                        fi\
                elif [ ! -z ${r} ] && [ "${s}" = "multi" ]; then\
                        if [ -z ${c} ];  then\
                                ansible-playbook --ssh-common-args='-o UserKnownHostsFile=./known_hosts' -u ${USERNAME} destroy-k8s.yml -e '{single_master: True}' -e '{multi_master: True}' --tags='uninstall';\
                        else\
                                echo "No Actions for Uninstalling Kubernetes Multi Master Cluster";\
                        fi\
                else\
                        echo "No Actions for Uninstalling Kubernetes Cluster";\
                fi;\
	else\
		echo "No Actions for Kubernetes Role";\
		exit;\
	fi
